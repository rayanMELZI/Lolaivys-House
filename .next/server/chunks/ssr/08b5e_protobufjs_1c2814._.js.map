{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/util/longbits.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/util/minimal.js"],"sourcesContent":["\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n */\r\nutil.isNode = Boolean(typeof global !== \"undefined\"\r\n                   && global\r\n                   && global.process\r\n                   && global.process.versions\r\n                   && global.process.versions.node);\r\n\r\n/**\r\n * Global object reference.\r\n * @memberof util\r\n * @type {Object}\r\n */\r\nutil.global = util.isNode && global\r\n           || typeof window !== \"undefined\" && window\r\n           || typeof self   !== \"undefined\" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    CustomError.prototype = Object.create(Error.prototype, {\r\n        constructor: {\r\n            value: CustomError,\r\n            writable: true,\r\n            enumerable: false,\r\n            configurable: true,\r\n        },\r\n        name: {\r\n            get: function get() { return name; },\r\n            set: undefined,\r\n            enumerable: false,\r\n            // configurable: false would accurately preserve the behavior of\r\n            // the original, but I'm guessing that was not intentional.\r\n            // For an actual error subclass, this property would\r\n            // be configurable.\r\n            configurable: true,\r\n        },\r\n        toString: {\r\n            value: function value() { return this.name + \": \" + this.message; },\r\n            writable: true,\r\n            enumerable: false,\r\n            configurable: true,\r\n        },\r\n    });\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/writer.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\nvar create = function create() {\r\n    return util.Buffer\r\n        ? function create_buffer_setup() {\r\n            return (Writer.create = function create_buffer() {\r\n                return new BufferWriter();\r\n            })();\r\n        }\r\n        /* istanbul ignore next */\r\n        : function create_array() {\r\n            return new Writer();\r\n        };\r\n};\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = create();\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n    Writer.create = create();\r\n    BufferWriter._configure();\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 817, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 821, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/writer_buffer.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\nBufferWriter._configure = function () {\r\n    /**\r\n     * Allocates a buffer of the specified size.\r\n     * @function\r\n     * @param {number} size Buffer size\r\n     * @returns {Buffer} Buffer\r\n     */\r\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\r\n\r\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\r\n        ? function writeBytesBuffer_set(val, buf, pos) {\r\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n          // also works for plain array values\r\n        }\r\n        /* istanbul ignore next */\r\n        : function writeBytesBuffer_copy(val, buf, pos) {\r\n          if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n          else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n        };\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(BufferWriter.writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else if (buf.utf8Write)\r\n        buf.utf8Write(val, pos);\r\n    else\r\n        buf.write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = util.Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\r\nBufferWriter._configure();\r\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG;AAEjB,iBAAiB;AACjB,IAAI;AACJ,CAAC,aAAa,SAAS,GAAG,OAAO,MAAM,CAAC,OAAO,SAAS,CAAC,EAAE,WAAW,GAAG;AAEzE,IAAI;AAEJ;;;;;CAKC,GACD,SAAS;IACL,OAAO,IAAI,CAAC,IAAI;AACpB;AAEA,aAAa,UAAU,GAAG;IACtB;;;;;KAKC,GACD,aAAa,KAAK,GAAG,KAAK,mBAAmB;IAE7C,aAAa,gBAAgB,GAAG,KAAK,MAAM,IAAI,KAAK,MAAM,CAAC,SAAS,YAAY,cAAc,KAAK,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,KAAK,QAC3H,SAAS,qBAAqB,GAAG,EAAE,GAAG,EAAE,GAAG;QAC3C,IAAI,GAAG,CAAC,KAAK,MAAM,sGAAsG;IACzH,oCAAoC;IACtC,IAEE,SAAS,sBAAsB,GAAG,EAAE,GAAG,EAAE,GAAG;QAC5C,IAAI,IAAI,IAAI,EACV,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,IAAI,MAAM;aAC7B,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EACjC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;IACzB;AACR;AAGA;;CAEC,GACD,aAAa,SAAS,CAAC,KAAK,GAAG,SAAS,mBAAmB,KAAK;IAC5D,IAAI,KAAK,QAAQ,CAAC,QACd,QAAQ,KAAK,YAAY,CAAC,OAAO;IACrC,IAAI,MAAM,MAAM,MAAM,KAAK;IAC3B,IAAI,CAAC,MAAM,CAAC;IACZ,IAAI,KACA,IAAI,CAAC,KAAK,CAAC,aAAa,gBAAgB,EAAE,KAAK;IACnD,OAAO,IAAI;AACf;AAEA,SAAS,kBAAkB,GAAG,EAAE,GAAG,EAAE,GAAG;IACpC,IAAI,IAAI,MAAM,GAAG,IACb,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK;SACzB,IAAI,IAAI,SAAS,EAClB,IAAI,SAAS,CAAC,KAAK;SAEnB,IAAI,KAAK,CAAC,KAAK;AACvB;AAEA;;CAEC,GACD,aAAa,SAAS,CAAC,MAAM,GAAG,SAAS,oBAAoB,KAAK;IAC9D,IAAI,MAAM,KAAK,MAAM,CAAC,UAAU,CAAC;IACjC,IAAI,CAAC,MAAM,CAAC;IACZ,IAAI,KACA,IAAI,CAAC,KAAK,CAAC,mBAAmB,KAAK;IACvC,OAAO,IAAI;AACf;AAGA;;;;;CAKC,GAED,aAAa,UAAU"}},
    {"offset": {"line": 878, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 882, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/reader.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\nvar create = function create() {\r\n    return util.Buffer\r\n        ? function create_buffer_setup(buffer) {\r\n            return (Reader.create = function create_buffer(buffer) {\r\n                return util.Buffer.isBuffer(buffer)\r\n                    ? new BufferReader(buffer)\r\n                    /* istanbul ignore next */\r\n                    : create_array(buffer);\r\n            })(buffer);\r\n        }\r\n        /* istanbul ignore next */\r\n        : create_array;\r\n};\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = create();\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n\r\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        var nativeBuffer = util.Buffer;\r\n        return nativeBuffer\r\n            ? nativeBuffer.alloc(0)\r\n            : new this.buf.constructor(0);\r\n    }\r\n    return this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n    Reader.create = create();\r\n    BufferReader._configure();\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1173, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/reader_buffer.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\nBufferReader._configure = function () {\r\n    /* istanbul ignore else */\r\n    if (util.Buffer)\r\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice\r\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\r\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\r\nBufferReader._configure();\r\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG;AAEjB,iBAAiB;AACjB,IAAI;AACJ,CAAC,aAAa,SAAS,GAAG,OAAO,MAAM,CAAC,OAAO,SAAS,CAAC,EAAE,WAAW,GAAG;AAEzE,IAAI;AAEJ;;;;;;CAMC,GACD,SAAS,aAAa,MAAM;IACxB,OAAO,IAAI,CAAC,IAAI,EAAE;AAElB;;;;KAIC,GACL;AAEA,aAAa,UAAU,GAAG;IACtB,wBAAwB,GACxB,IAAI,KAAK,MAAM,EACX,aAAa,SAAS,CAAC,MAAM,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,KAAK;AACnE;AAGA;;CAEC,GACD,aAAa,SAAS,CAAC,MAAM,GAAG,SAAS;IACrC,IAAI,MAAM,IAAI,CAAC,MAAM,IAAI,eAAe;IACxC,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,GACnB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,KACzE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG;AAC3F;AAEA;;;;;CAKC,GAED,aAAa,UAAU"}},
    {"offset": {"line": 1207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1211, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/rpc/service.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG;AAEjB,IAAI;AAEJ,uBAAuB;AACvB,CAAC,QAAQ,SAAS,GAAG,OAAO,MAAM,CAAC,KAAK,YAAY,CAAC,SAAS,CAAC,EAAE,WAAW,GAAG;AAE/E;;;;;;;;;;CAUC,GAED;;;;;;;;;CASC,GAED;;;;;;;;;CASC,GACD,SAAS,QAAQ,OAAO,EAAE,gBAAgB,EAAE,iBAAiB;IAEzD,IAAI,OAAO,YAAY,YACnB,MAAM,UAAU;IAEpB,KAAK,YAAY,CAAC,IAAI,CAAC,IAAI;IAE3B;;;KAGC,GACD,IAAI,CAAC,OAAO,GAAG;IAEf;;;KAGC,GACD,IAAI,CAAC,gBAAgB,GAAG,QAAQ;IAEhC;;;KAGC,GACD,IAAI,CAAC,iBAAiB,GAAG,QAAQ;AACrC;AAEA;;;;;;;;;;CAUC,GACD,QAAQ,SAAS,CAAC,OAAO,GAAG,SAAS,QAAQ,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ;IAE7F,IAAI,CAAC,SACD,MAAM,UAAU;IAEpB,IAAI,OAAO,IAAI;IACf,IAAI,CAAC,UACD,OAAO,KAAK,SAAS,CAAC,SAAS,MAAM,QAAQ,aAAa,cAAc;IAE5E,IAAI,CAAC,KAAK,OAAO,EAAE;QACf,WAAW;YAAa,SAAS,MAAM;QAAmB,GAAG;QAC7D,OAAO;IACX;IAEA,IAAI;QACA,OAAO,KAAK,OAAO,CACf,QACA,WAAW,CAAC,KAAK,gBAAgB,GAAG,oBAAoB,SAAS,CAAC,SAAS,MAAM,IACjF,SAAS,YAAY,GAAG,EAAE,QAAQ;YAE9B,IAAI,KAAK;gBACL,KAAK,IAAI,CAAC,SAAS,KAAK;gBACxB,OAAO,SAAS;YACpB;YAEA,IAAI,aAAa,MAAM;gBACnB,KAAK,GAAG,CAAC,cAAc,GAAG;gBAC1B,OAAO;YACX;YAEA,IAAI,CAAC,CAAC,oBAAoB,YAAY,GAAG;gBACrC,IAAI;oBACA,WAAW,YAAY,CAAC,KAAK,iBAAiB,GAAG,oBAAoB,SAAS,CAAC;gBACnF,EAAE,OAAO,KAAK;oBACV,KAAK,IAAI,CAAC,SAAS,KAAK;oBACxB,OAAO,SAAS;gBACpB;YACJ;YAEA,KAAK,IAAI,CAAC,QAAQ,UAAU;YAC5B,OAAO,SAAS,MAAM;QAC1B;IAER,EAAE,OAAO,KAAK;QACV,KAAK,IAAI,CAAC,SAAS,KAAK;QACxB,WAAW;YAAa,SAAS;QAAM,GAAG;QAC1C,OAAO;IACX;AACJ;AAEA;;;;CAIC,GACD,QAAQ,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,UAAU;IAC3C,IAAI,IAAI,CAAC,OAAO,EAAE;QACd,IAAI,CAAC,YACD,IAAI,CAAC,OAAO,CAAC,MAAM,MAAM;QAC7B,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG;IACxB;IACA,OAAO,IAAI;AACf"}},
    {"offset": {"line": 1321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1325, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/rpc.js"],"sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n"],"names":[],"mappings":"AAAA;AAEA;;;CAGC,GACD,IAAI,MAAM;AAEV;;;;;;;;;;;;;;;;CAgBC,GAED;;;;;;;CAOC,GAED,IAAI,OAAO"}},
    {"offset": {"line": 1354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1358, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/roots.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available across modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG,CAAC,GAElB;;;;;;;;;;;;;;CAcC"}},
    {"offset": {"line": 1374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1378, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/index-minimal.js"],"sourcesContent":["\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.util._configure();\r\n    protobuf.Writer._configure(protobuf.BufferWriter);\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nconfigure();\r\n"],"names":[],"mappings":"AAAA;AACA,IAAI,WAAW;AAEf;;;;;CAKC,GACD,SAAS,KAAK,GAAG;AAEjB,gBAAgB;AAChB,SAAS,MAAM;AACf,SAAS,YAAY;AACrB,SAAS,MAAM;AACf,SAAS,YAAY;AAErB,UAAU;AACV,SAAS,IAAI;AACb,SAAS,GAAG;AACZ,SAAS,KAAK;AACd,SAAS,SAAS,GAAM;AAExB,wBAAwB,GACxB;;;CAGC,GACD,SAAS;IACL,SAAS,IAAI,CAAC,UAAU;IACxB,SAAS,MAAM,CAAC,UAAU,CAAC,SAAS,YAAY;IAChD,SAAS,MAAM,CAAC,UAAU,CAAC,SAAS,YAAY;AACpD;AAEA,qDAAqD;AACrD"}},
    {"offset": {"line": 1406, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1410, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/types.js"],"sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n"],"names":[],"mappings":"AAAA;AAEA;;;CAGC,GACD,IAAI,QAAQ;AAEZ,IAAI;AAEJ,IAAI,IAAI;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAY,KAAK;CACpB;AAED,SAAS,KAAK,MAAM,EAAE,MAAM;IACxB,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,UAAU;IACV,MAAO,IAAI,OAAO,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,GAAG,MAAM,CAAC,IAAI;IACxD,OAAO;AACX;AAEA;;;;;;;;;;;;;;;;;;;CAmBC,GACD,MAAM,KAAK,GAAG,KAAK;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;CAClB;AAED;;;;;;;;;;;;;;;;;;;;CAoBC,GACD,MAAM,QAAQ,GAAG,KAAK;IAClB,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG,KAAK,UAAU;IAC9B,YAAY,GAAG;CAClB;AAED;;;;;;;;;CASC,GACD,MAAM,IAAI,GAAG,KAAK;IACd,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;CAClB,EAAE;AAEH;;;;;;;;;;;;;;;;CAgBC,GACD,MAAM,MAAM,GAAG,KAAK;IAChB,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;CAClB,EAAE;AAEH;;;;;;;;;;;;;;;;;CAiBC,GACD,MAAM,MAAM,GAAG,KAAK;IAChB,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;IACf,YAAY,GAAG;CAClB"}},
    {"offset": {"line": 1591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1595, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/field.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = require(\"./enum\"),\r\n    types = require(\"./types\"),\r\n    util  = require(\"./util\");\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    if (rule === \"proto3_optional\") {\r\n        rule = \"optional\";\r\n    }\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    } else if (this.options && this.options.proto3_optional) {\r\n        // proto3 scalar value marked optional; should default to null\r\n        this.typeDefault = null;\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1868, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1872, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/oneof.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = require(\"./field\"),\r\n    util  = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2021, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2025, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/namespace.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Field    = require(\"./field\"),\r\n    util     = require(\"./util\"),\r\n    OneOf    = require(\"./oneof\");\r\n\r\nvar Type,    // cyclic\r\n    Service,\r\n    Enum;\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\r\n */\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nNamespace._configure = function(Type_, Service_, Enum_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n    Enum    = Enum_;\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2350, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/mapfield.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = require(\"./field\");\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG;AAEjB,gBAAgB;AAChB,IAAI;AACJ,CAAC,CAAC,SAAS,SAAS,GAAG,OAAO,MAAM,CAAC,MAAM,SAAS,CAAC,EAAE,WAAW,GAAG,QAAQ,EAAE,SAAS,GAAG;AAE3F,IAAI,wGACA;AAEJ;;;;;;;;;;;CAWC,GACD,SAAS,SAAS,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO;IACvD,MAAM,IAAI,CAAC,IAAI,EAAE,MAAM,IAAI,MAAM,WAAW,WAAW,SAAS;IAEhE,sBAAsB,GACtB,IAAI,CAAC,KAAK,QAAQ,CAAC,UACf,MAAM,UAAU;IAEpB;;;KAGC,GACD,IAAI,CAAC,OAAO,GAAG,SAAS,iBAAiB;IAEzC;;;KAGC,GACD,IAAI,CAAC,eAAe,GAAG;IAEvB,sBAAsB;IACtB,IAAI,CAAC,GAAG,GAAG;AACf;AAEA;;;;;CAKC,GAED;;;;;CAKC,GAED;;;;;;CAMC,GACD,SAAS,QAAQ,GAAG,SAAS,SAAS,IAAI,EAAE,IAAI;IAC5C,OAAO,IAAI,SAAS,MAAM,KAAK,EAAE,EAAE,KAAK,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO;AAC1F;AAEA;;;;CAIC,GACD,SAAS,SAAS,CAAC,MAAM,GAAG,SAAS,OAAO,aAAa;IACrD,IAAI,eAAe,gBAAgB,QAAQ,cAAc,YAAY,IAAI;IACzE,OAAO,KAAK,QAAQ,CAAC;QACjB;QAAY,IAAI,CAAC,OAAO;QACxB;QAAY,IAAI,CAAC,IAAI;QACrB;QAAY,IAAI,CAAC,EAAE;QACnB;QAAY,IAAI,CAAC,MAAM;QACvB;QAAY,IAAI,CAAC,OAAO;QACxB;QAAY,eAAe,IAAI,CAAC,OAAO,GAAG;KAC7C;AACL;AAEA;;CAEC,GACD,SAAS,SAAS,CAAC,OAAO,GAAG,SAAS;IAClC,IAAI,IAAI,CAAC,QAAQ,EACb,OAAO,IAAI;IAEf,2HAA2H;IAC3H,IAAI,MAAM,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,WAC/B,MAAM,MAAM,uBAAuB,IAAI,CAAC,OAAO;IAEnD,OAAO,MAAM,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;AAC5C;AAEA;;;;;;;;;CASC,GACD,SAAS,CAAC,GAAG,SAAS,iBAAiB,OAAO,EAAE,YAAY,EAAE,cAAc;IAExE,yEAAyE;IACzE,IAAI,OAAO,mBAAmB,YAC1B,iBAAiB,KAAK,YAAY,CAAC,gBAAgB,IAAI;SAGtD,IAAI,kBAAkB,OAAO,mBAAmB,UACjD,iBAAiB,KAAK,YAAY,CAAC,gBAAgB,IAAI;IAE3D,OAAO,SAAS,kBAAkB,SAAS,EAAE,SAAS;QAClD,KAAK,YAAY,CAAC,UAAU,WAAW,EAClC,GAAG,CAAC,IAAI,SAAS,WAAW,SAAS,cAAc;IAC5D;AACJ"}},
    {"offset": {"line": 2446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2450, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/method.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Options properly parsed into an object\r\n     */\r\n    this.parsedOptions = parsedOptions;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n * @property {string} comment Method comments\r\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined,\r\n        \"parsedOptions\"  , this.parsedOptions,\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2575, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/service.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = require(\"./method\"),\r\n    util   = require(\"./util\"),\r\n    rpc    = require(\"./rpc\");\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG;AAEjB,oBAAoB;AACpB,IAAI;AACJ,CAAC,CAAC,QAAQ,SAAS,GAAG,OAAO,MAAM,CAAC,UAAU,SAAS,CAAC,EAAE,WAAW,GAAG,OAAO,EAAE,SAAS,GAAG;AAE7F,IAAI,0GACA,sGACA;AAEJ;;;;;;;;CAQC,GACD,SAAS,QAAQ,IAAI,EAAE,OAAO;IAC1B,UAAU,IAAI,CAAC,IAAI,EAAE,MAAM;IAE3B;;;KAGC,GACD,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,iBAAiB;IAEpC;;;;KAIC,GACD,IAAI,CAAC,aAAa,GAAG;AACzB;AAEA;;;;;CAKC,GAED;;;;;;CAMC,GACD,QAAQ,QAAQ,GAAG,SAAS,SAAS,IAAI,EAAE,IAAI;IAC3C,IAAI,UAAU,IAAI,QAAQ,MAAM,KAAK,OAAO;IAC5C,wBAAwB,GACxB,IAAI,KAAK,OAAO,EACZ,IAAK,IAAI,QAAQ,OAAO,IAAI,CAAC,KAAK,OAAO,GAAG,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,EAAE,EACnE,QAAQ,GAAG,CAAC,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;IACpE,IAAI,KAAK,MAAM,EACX,QAAQ,OAAO,CAAC,KAAK,MAAM;IAC/B,QAAQ,OAAO,GAAG,KAAK,OAAO;IAC9B,OAAO;AACX;AAEA;;;;CAIC,GACD,QAAQ,SAAS,CAAC,MAAM,GAAG,SAAS,OAAO,aAAa;IACpD,IAAI,YAAY,UAAU,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;IACtD,IAAI,eAAe,gBAAgB,QAAQ,cAAc,YAAY,IAAI;IACzE,OAAO,KAAK,QAAQ,CAAC;QACjB;QAAY,aAAa,UAAU,OAAO,IAAI;QAC9C;QAAY,UAAU,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,kBAAkB,wBAAwB,GAAG,CAAC;QACnG;QAAY,aAAa,UAAU,MAAM,IAAI;QAC7C;QAAY,eAAe,IAAI,CAAC,OAAO,GAAG;KAC7C;AACL;AAEA;;;;;CAKC,GACD,OAAO,cAAc,CAAC,QAAQ,SAAS,EAAE,gBAAgB;IACrD,KAAK;QACD,OAAO,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;IACjF;AACJ;AAEA,SAAS,WAAW,OAAO;IACvB,QAAQ,aAAa,GAAG;IACxB,OAAO;AACX;AAEA;;CAEC,GACD,QAAQ,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,IAAI;IACrC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAClB,UAAU,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;AAC9C;AAEA;;CAEC,GACD,QAAQ,SAAS,CAAC,UAAU,GAAG,SAAS;IACpC,IAAI,UAAU,IAAI,CAAC,YAAY;IAC/B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,EAAE,EAClC,OAAO,CAAC,EAAE,CAAC,OAAO;IACtB,OAAO,UAAU,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;AAChD;AAEA;;CAEC,GACD,QAAQ,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,MAAM;IAEvC,sBAAsB,GACtB,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,GACpB,MAAM,MAAM,qBAAqB,OAAO,IAAI,GAAG,UAAU,IAAI;IAEjE,IAAI,kBAAkB,QAAQ;QAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,GAAG;QAC5B,OAAO,MAAM,GAAG,IAAI;QACpB,OAAO,WAAW,IAAI;IAC1B;IACA,OAAO,UAAU,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;AAC9C;AAEA;;CAEC,GACD,QAAQ,SAAS,CAAC,MAAM,GAAG,SAAS,OAAO,MAAM;IAC7C,IAAI,kBAAkB,QAAQ;QAE1B,sBAAsB,GACtB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,KAAK,QAC9B,MAAM,MAAM,SAAS,yBAAyB,IAAI;QAEtD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC;QAChC,OAAO,MAAM,GAAG;QAChB,OAAO,WAAW,IAAI;IAC1B;IACA,OAAO,UAAU,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;AACjD;AAEA;;;;;;CAMC,GACD,QAAQ,SAAS,CAAC,MAAM,GAAG,SAAS,OAAO,OAAO,EAAE,gBAAgB,EAAE,iBAAiB;IACnF,IAAI,aAAa,IAAI,IAAI,OAAO,CAAC,SAAS,kBAAkB;IAC5D,IAAK,IAAI,IAAI,GAAG,QAAQ,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,EAAG;QACzE,IAAI,aAAa,KAAK,OAAO,CAAC,CAAC,SAAS,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,GAAG,IAAI,EAAE,OAAO,CAAC,YAAY;QACnG,UAAU,CAAC,WAAW,GAAG,KAAK,OAAO,CAAC;YAAC;YAAI;SAAI,EAAE,KAAK,UAAU,CAAC,cAAc,aAAa,MAAM,YAAY,kCAAkC;YAC5I,GAAG;YACH,GAAG,OAAO,mBAAmB,CAAC,IAAI;YAClC,GAAG,OAAO,oBAAoB,CAAC,IAAI;QACvC;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 2706, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2710, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/message.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Message;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object = object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG;AAEjB,IAAI;AAEJ;;;;;;CAMC,GACD,SAAS,QAAQ,UAAU;IACvB,sBAAsB;IACtB,IAAI,YACA,IAAK,IAAI,OAAO,OAAO,IAAI,CAAC,aAAa,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,EAAE,EAC/D,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;AAC/C;AAEA;;;;;CAKC,GAED;;;;;CAKC,GAED,4BAA4B,GAE5B;;;;;;CAMC,GACD,QAAQ,MAAM,GAAG,SAAS,OAAO,UAAU;IACvC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AAC7B;AAEA;;;;;;;CAOC,GACD,QAAQ,MAAM,GAAG,SAAS,OAAO,OAAO,EAAE,MAAM;IAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS;AACtC;AAEA;;;;;;;CAOC,GACD,QAAQ,eAAe,GAAG,SAAS,gBAAgB,OAAO,EAAE,MAAM;IAC9D,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS;AAC/C;AAEA;;;;;;;;CAQC,GACD,QAAQ,MAAM,GAAG,SAAS,OAAO,MAAM;IACnC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AAC7B;AAEA;;;;;;;;CAQC,GACD,QAAQ,eAAe,GAAG,SAAS,gBAAgB,MAAM;IACrD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;AACtC;AAEA;;;;;;CAMC,GACD,QAAQ,MAAM,GAAG,SAAS,OAAO,OAAO;IACpC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AAC7B;AAEA;;;;;;CAMC,GACD,QAAQ,UAAU,GAAG,SAAS,WAAW,MAAM;IAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;AACjC;AAEA;;;;;;;CAOC,GACD,QAAQ,QAAQ,GAAG,SAAS,SAAS,OAAO,EAAE,OAAO;IACjD,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS;AACxC;AAEA;;;CAGC,GACD,QAAQ,SAAS,CAAC,MAAM,GAAG,SAAS;IAChC,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,aAAa;AACvD,GAEA,2BAA2B"}},
    {"offset": {"line": 2818, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2822, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/decoder.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = require(\"./enum\"),\r\n    types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i: {\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"var c2 = r.uint32()+r.pos\");\r\n\r\n            if (types.defaults[field.keyType] !== undefined) gen\r\n                (\"k=%j\", types.defaults[field.keyType]);\r\n            else gen\r\n                (\"k=null\");\r\n\r\n            if (types.defaults[type] !== undefined) gen\r\n                (\"value=%j\", types.defaults[type]);\r\n            else gen\r\n                (\"value=null\");\r\n\r\n            gen\r\n                (\"while(r.pos<c2){\")\r\n                    (\"var tag2=r.uint32()\")\r\n                    (\"switch(tag2>>>3){\")\r\n                        (\"case 1: k=r.%s(); break\", field.keyType)\r\n                        (\"case 2:\");\r\n\r\n            if (types.basic[type] === undefined) gen\r\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\r\n            else gen\r\n                            (\"value=r.%s()\", type);\r\n\r\n            gen\r\n                            (\"break\")\r\n                        (\"default:\")\r\n                            (\"r.skipType(tag2&7)\")\r\n                            (\"break\")\r\n                    (\"}\")\r\n                (\"}\");\r\n\r\n            if (types.long[field.keyType] !== undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\r\n            else gen\r\n                (\"%s[k]=value\", ref);\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\")\r\n            (\"}\");\r\n        // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG;AAEjB,IAAI,sGACA,wGACA;AAEJ,SAAS,QAAQ,KAAK;IAClB,OAAO,uBAAuB,MAAM,IAAI,GAAG;AAC/C;AAEA;;;;CAIC,GACD,SAAS,QAAQ,KAAK;IAClB,0CAA0C,GAC1C,IAAI,MAAM,KAAK,OAAO,CAAC;QAAC;QAAK;KAAI,EAAE,MAAM,IAAI,GAAG,WAC/C,8BACI,sBACJ,sDAAsD,CAAC,MAAM,WAAW,CAAC,MAAM,CAAC,SAAS,KAAK;QAAI,OAAO,MAAM,GAAG;IAAE,GAAG,MAAM,GAAG,aAAa,EAAE,GAC/I,mBACI;IACL,IAAI,MAAM,KAAK,EAAE,IACZ,iBACI;IACT,IACK;IAEL,IAAI,IAAI;IACR,MAAO,IAAI,eAAe,GAAG,MAAM,WAAW,CAAC,MAAM,EAAE,EAAE,EAAG;QACxD,IAAI,QAAQ,MAAM,YAAY,CAAC,EAAE,CAAC,OAAO,IACrC,OAAQ,MAAM,YAAY,YAAY,OAAO,UAAU,MAAM,IAAI,EACjE,MAAQ,MAAM,KAAK,QAAQ,CAAC,MAAM,IAAI;QAAG,IACxC,cAAc,MAAM,EAAE;QAE3B,aAAa;QACb,IAAI,MAAM,GAAG,EAAE;YAAE,IACR,6BAA6B,KACzB,SAAS,KACb;YAEL,IAAI,MAAM,QAAQ,CAAC,MAAM,OAAO,CAAC,KAAK,WAAW,IAC5C,QAAQ,MAAM,QAAQ,CAAC,MAAM,OAAO,CAAC;iBACrC,IACA;YAEL,IAAI,MAAM,QAAQ,CAAC,KAAK,KAAK,WAAW,IACnC,YAAY,MAAM,QAAQ,CAAC,KAAK;iBAChC,IACA;YAEL,IACK,oBACI,uBACA,qBACI,2BAA2B,MAAM,OAAO,EACxC;YAEb,IAAI,MAAM,KAAK,CAAC,KAAK,KAAK,WAAW,IACpB,wCAAwC,IAAI,kBAAkB;iBAC1E,IACY,gBAAgB;YAEjC,IACiB,SACJ,YACI,sBACA,SACR,KACJ;YAEL,IAAI,MAAM,IAAI,CAAC,MAAM,OAAO,CAAC,KAAK,WAAW,IACxC,wDAAwD;iBACxD,IACA,eAAe;QAExB,kBAAkB;QAClB,OAAO,IAAI,MAAM,QAAQ,EAAE;YAAE,IAEpB,wBAAwB,KAAK,KACzB,SAAS;YAElB,gEAAgE;YAChE,IAAI,MAAM,MAAM,CAAC,KAAK,KAAK,WAAW,IACjC,kBACI,2BACA,mBACI,mBAAmB,KAAK,MAChC;YAEL,aAAa;YACb,IAAI,MAAM,KAAK,CAAC,KAAK,KAAK,WAAW,IAAI,MAAM,YAAY,CAAC,KAAK,GACvD,iCACA,2CAA2C,KAAK;iBACrD,IACI,mBAAmB,KAAK;QAErC,eAAe;QACf,OAAO,IAAI,MAAM,KAAK,CAAC,KAAK,KAAK,WAAW,IAAI,MAAM,YAAY,CAAC,KAAK,GAC9D,2BACA,qCAAqC,KAAK;aAC/C,IACI,aAAa,KAAK;QAC3B,IACS,SACJ;IACL,iBAAiB;IACrB;IAAE,IACO,YACI,mBACA,SAER,KACJ;IAED,iBAAiB;IACjB,IAAK,IAAI,GAAG,IAAI,MAAM,YAAY,CAAC,MAAM,EAAE,EAAE,EAAG;QAC5C,IAAI,SAAS,MAAM,YAAY,CAAC,EAAE;QAClC,IAAI,OAAO,QAAQ,EAAE,IACxB,6BAA6B,OAAO,IAAI,EACpC,6CAA6C,QAAQ;IAC1D;IAEA,OAAO,IACN;AACD,yCAAyC,GAC7C"}},
    {"offset": {"line": 2880, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2884, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/verifier.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    util      = require(\"./util\");\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3006, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3010, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/converter.js"],"sourcesContent":["\"use strict\";\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = require(\"./enum\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    var defaultAlreadyEmitted = false;\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                // enum unknown values passthrough\r\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\r\n                    (\"default:\")\r\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\r\n                    if (!field.repeated) gen // fallback to default value only for\r\n                                             // arrays, to avoid leaving holes.\r\n                        (\"break\");           // for non-repeated fields, just ignore\r\n                    defaultAlreadyEmitted = true;\r\n                }\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-next-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length >= 0)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-next-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) {\r\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\r\n                gen\r\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\r\n        (\"else{\")\r\n            (\"d%s=%s\", prop, arrayDefault)\r\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\r\n        (\"}\");\r\n            } else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3211, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/wrappers.js"],"sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = require(\"./message\");\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n             // Only use fully qualified type name after the last '/'\r\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].slice(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                if (type_url.indexOf(\"/\") === -1) {\r\n                    type_url = \"/\" + type_url;\r\n                }\r\n                return this.create({\r\n                    type_url: type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // Default prefix\r\n        var googleApi = \"type.googleapis.com/\";\r\n        var prefix = \"\";\r\n        var name = \"\";\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            // Separate the prefix used\r\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            var messageName = message.$type.fullName[0] === \".\" ?\r\n                message.$type.fullName.slice(1) : message.$type.fullName;\r\n            // Default to type.googleapis.com prefix if no prefix is used\r\n            if (prefix === \"\") {\r\n                prefix = googleApi;\r\n            }\r\n            name = prefix + messageName;\r\n            object[\"@type\"] = name;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n"],"names":[],"mappings":"AAAA;AAEA;;;;CAIC,GACD,IAAI,WAAW;AAEf,IAAI;AAEJ;;;;;;;CAOC,GAED;;;;;;;;CAQC,GAED;;;;;CAKC,GAED,yBAAyB;AACzB,QAAQ,CAAC,uBAAuB,GAAG;IAE/B,YAAY,SAAS,MAAM;QAEvB,8BAA8B;QAC9B,IAAI,UAAU,MAAM,CAAC,QAAQ,EAAE;YAC1B,wDAAwD;YACzD,IAAI,OAAO,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO;YACxE,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC;YACvB,wBAAwB,GACxB,IAAI,MAAM;gBACN,uCAAuC;gBACvC,IAAI,WAAW,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,MACzC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,QAAQ;gBAC9C,8DAA8D;gBAC9D,IAAI,SAAS,OAAO,CAAC,SAAS,CAAC,GAAG;oBAC9B,WAAW,MAAM;gBACrB;gBACA,OAAO,IAAI,CAAC,MAAM,CAAC;oBACf,UAAU;oBACV,OAAO,KAAK,MAAM,CAAC,KAAK,UAAU,CAAC,SAAS,MAAM;gBACtD;YACJ;QACJ;QAEA,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B;IAEA,UAAU,SAAS,OAAO,EAAE,OAAO;QAE/B,iBAAiB;QACjB,IAAI,YAAY;QAChB,IAAI,SAAS;QACb,IAAI,OAAO;QAEX,yCAAyC;QACzC,IAAI,WAAW,QAAQ,IAAI,IAAI,QAAQ,QAAQ,IAAI,QAAQ,KAAK,EAAE;YAC9D,wDAAwD;YACxD,OAAO,QAAQ,QAAQ,CAAC,SAAS,CAAC,QAAQ,QAAQ,CAAC,WAAW,CAAC,OAAO;YACtE,2BAA2B;YAC3B,SAAS,QAAQ,QAAQ,CAAC,SAAS,CAAC,GAAG,QAAQ,QAAQ,CAAC,WAAW,CAAC,OAAO;YAC3E,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC;YACvB,wBAAwB,GACxB,IAAI,MACA,UAAU,KAAK,MAAM,CAAC,QAAQ,KAAK;QAC3C;QAEA,yBAAyB;QACzB,IAAI,CAAC,CAAC,mBAAmB,IAAI,CAAC,IAAI,KAAK,mBAAmB,SAAS;YAC/D,IAAI,SAAS,QAAQ,KAAK,CAAC,QAAQ,CAAC,SAAS;YAC7C,IAAI,cAAc,QAAQ,KAAK,CAAC,QAAQ,CAAC,EAAE,KAAK,MAC5C,QAAQ,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,QAAQ,KAAK,CAAC,QAAQ;YAC5D,6DAA6D;YAC7D,IAAI,WAAW,IAAI;gBACf,SAAS;YACb;YACA,OAAO,SAAS;YAChB,MAAM,CAAC,QAAQ,GAAG;YAClB,OAAO;QACX;QAEA,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS;IAClC;AACJ"}},
    {"offset": {"line": 3290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3294, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/type.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    Service   = require(\"./service\"),\r\n    Message   = require(\"./message\"),\r\n    Reader    = require(\"./reader\"),\r\n    Writer    = require(\"./writer\"),\r\n    util      = require(\"./util\"),\r\n    encoder   = require(\"./encoder\"),\r\n    decoder   = require(\"./decoder\"),\r\n    verifier  = require(\"./verifier\"),\r\n    converter = require(\"./converter\"),\r\n    wrappers  = require(\"./wrappers\");\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {Array.<number[]|string>} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3730, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3734, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/root.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = require(\"./field\"),\r\n    Enum    = require(\"./enum\"),\r\n    OneOf   = require(\"./oneof\"),\r\n    util    = require(\"./util\");\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n/**\r\n * Fetch content from file path or url\r\n * This method exists so you can override it with your own logic.\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.fetch = util.fetch;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        if (sync)\r\n            throw err;\r\n        var cb = callback;\r\n        callback = null;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Bundled definition existence checking\r\n    function getBundledFileName(filename) {\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common) return altname;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n        filename = getBundledFileName(filename) || filename;\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            self.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        //do not allow to extend same field twice to prevent the error\r\n        if (extendedType.get(sisterField.name)) {\r\n            return true;\r\n        }\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type   = Type_;\r\n    parse  = parse_;\r\n    common = common_;\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4005, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/util.js"],"sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = require(\"./util/minimal\");\r\n\r\nvar roots = require(\"./roots\");\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = require(\"@protobufjs/codegen\");\r\nutil.fetch   = require(\"@protobufjs/fetch\");\r\nutil.path    = require(\"@protobufjs/path\");\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = require(\"./type\");\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = require(\"./enum\");\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n\r\n/**\r\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {string} path dot '.' delimited path of the property to set\r\n * @param {Object} value the value to set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nutil.setProperty = function setProperty(dst, path, value) {\r\n    function setProp(dst, path, value) {\r\n        var part = path.shift();\r\n        if (part === \"__proto__\" || part === \"prototype\") {\r\n          return dst;\r\n        }\r\n        if (path.length > 0) {\r\n            dst[part] = setProp(dst[part] || {}, path, value);\r\n        } else {\r\n            var prevValue = dst[part];\r\n            if (prevValue)\r\n                value = [].concat(prevValue).concat(value);\r\n            dst[part] = value;\r\n        }\r\n        return dst;\r\n    }\r\n\r\n    if (typeof dst !== \"object\")\r\n        throw TypeError(\"dst must be an object\");\r\n    if (!path)\r\n        throw TypeError(\"path must be specified\");\r\n\r\n    path = path.split(\".\");\r\n    return setProp(dst, path, value);\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\r\n    }\r\n});\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4170, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/object.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Parsed Options.\r\n     * @type {Array.<Object.<string,*>>|undefined}\r\n     */\r\n    this.parsedOptions = null;\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets a parsed option.\r\n * @param {string} name parsed Option name\r\n * @param {*} value Option value\r\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\r\n    if (!this.parsedOptions) {\r\n        this.parsedOptions = [];\r\n    }\r\n    var parsedOptions = this.parsedOptions;\r\n    if (propName) {\r\n        // If setting a sub property of an option then try to merge it\r\n        // with an existing option\r\n        var opt = parsedOptions.find(function (opt) {\r\n            return Object.prototype.hasOwnProperty.call(opt, name);\r\n        });\r\n        if (opt) {\r\n            // If we found an existing option - just merge the property value\r\n            var newValue = opt[name];\r\n            util.setProperty(newValue, propName, value);\r\n        } else {\r\n            // otherwise, create a new option, set it's property and add it to the list\r\n            opt = {};\r\n            opt[name] = util.setProperty({}, propName, value);\r\n            parsedOptions.push(opt);\r\n        }\r\n    } else {\r\n        // Always create a new option when setting the value of the option itself\r\n        var newOpt = {};\r\n        newOpt[name] = value;\r\n        parsedOptions.push(newOpt);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4359, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/enum.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = require(\"./namespace\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Values options, if any\r\n     * @type {Object<string, Object<string, *>>|undefined}\r\n     */\r\n    this.valuesOptions = valuesOptions;\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"       , this.options,\r\n        \"valuesOptions\" , this.valuesOptions,\r\n        \"values\"        , this.values,\r\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"       , keepComments ? this.comment : undefined,\r\n        \"comments\"      , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @param {Object.<string, *>|undefined} [options] Options, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment, options) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    if (options) {\r\n        if (this.valuesOptions === undefined)\r\n            this.valuesOptions = {};\r\n        this.valuesOptions[name] = options || null;\r\n    }\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n    if (this.valuesOptions)\r\n        delete this.valuesOptions[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG;AAEjB,2BAA2B;AAC3B,IAAI;AACJ,CAAC,CAAC,KAAK,SAAS,GAAG,OAAO,MAAM,CAAC,iBAAiB,SAAS,CAAC,EAAE,WAAW,GAAG,IAAI,EAAE,SAAS,GAAG;AAE9F,IAAI,gHACA;AAEJ;;;;;;;;;;;CAWC,GACD,SAAS,KAAK,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa;IACjE,iBAAiB,IAAI,CAAC,IAAI,EAAE,MAAM;IAElC,IAAI,UAAU,OAAO,WAAW,UAC5B,MAAM,UAAU;IAEpB;;;KAGC,GACD,IAAI,CAAC,UAAU,GAAG,CAAC;IAEnB;;;KAGC,GACD,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,iBAAiB;IAE/D;;;KAGC,GACD,IAAI,CAAC,OAAO,GAAG;IAEf;;;KAGC,GACD,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;IAE7B;;;KAGC,GACD,IAAI,CAAC,aAAa,GAAG;IAErB;;;KAGC,GACD,IAAI,CAAC,QAAQ,GAAG,WAAW,SAAS;IAEpC,wFAAwF;IACxF,uFAAuF;IACvF,mFAAmF;IAEnF,IAAI,QACA;QAAA,IAAK,IAAI,OAAO,OAAO,IAAI,CAAC,SAAS,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,EAAE,EAC3D,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,UAC3B,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAE,GAAG,IAAI,CAAC,EAAE;IAAA;AACnF;AAEA;;;;;CAKC,GAED;;;;;;CAMC,GACD,KAAK,QAAQ,GAAG,SAAS,SAAS,IAAI,EAAE,IAAI;IACxC,IAAI,MAAM,IAAI,KAAK,MAAM,KAAK,MAAM,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,QAAQ;IAC/E,IAAI,QAAQ,GAAG,KAAK,QAAQ;IAC5B,OAAO;AACX;AAEA;;;;CAIC,GACD,KAAK,SAAS,CAAC,MAAM,GAAG,SAAS,OAAO,aAAa;IACjD,IAAI,eAAe,gBAAgB,QAAQ,cAAc,YAAY,IAAI;IACzE,OAAO,KAAK,QAAQ,CAAC;QACjB;QAAkB,IAAI,CAAC,OAAO;QAC9B;QAAkB,IAAI,CAAC,aAAa;QACpC;QAAkB,IAAI,CAAC,MAAM;QAC7B;QAAkB,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG;QAC1E;QAAkB,eAAe,IAAI,CAAC,OAAO,GAAG;QAChD;QAAkB,eAAe,IAAI,CAAC,QAAQ,GAAG;KACpD;AACL;AAEA;;;;;;;;;CASC,GACD,KAAK,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO;IACxD,8CAA8C;IAE9C,IAAI,CAAC,KAAK,QAAQ,CAAC,OACf,MAAM,UAAU;IAEpB,IAAI,CAAC,KAAK,SAAS,CAAC,KAChB,MAAM,UAAU;IAEpB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,WACtB,MAAM,MAAM,qBAAqB,OAAO,UAAU,IAAI;IAE1D,IAAI,IAAI,CAAC,YAAY,CAAC,KAClB,MAAM,MAAM,QAAQ,KAAK,qBAAqB,IAAI;IAEtD,IAAI,IAAI,CAAC,cAAc,CAAC,OACpB,MAAM,MAAM,WAAW,OAAO,sBAAsB,IAAI;IAE5D,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,WAAW;QACnC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,GAC1C,MAAM,MAAM,kBAAkB,KAAK,SAAS,IAAI;QACpD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG;IACxB,OACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,GAAG;IAE9C,IAAI,SAAS;QACT,IAAI,IAAI,CAAC,aAAa,KAAK,WACvB,IAAI,CAAC,aAAa,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,WAAW;IAC1C;IAEA,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,WAAW;IACjC,OAAO,IAAI;AACf;AAEA;;;;;;CAMC,GACD,KAAK,SAAS,CAAC,MAAM,GAAG,SAAS,OAAO,IAAI;IAExC,IAAI,CAAC,KAAK,QAAQ,CAAC,OACf,MAAM,UAAU;IAEpB,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK;IAC3B,IAAI,OAAO,MACP,MAAM,MAAM,WAAW,OAAO,yBAAyB,IAAI;IAE/D,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI;IAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK;IACxB,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK;IAC1B,IAAI,IAAI,CAAC,aAAa,EAClB,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK;IAEnC,OAAO,IAAI;AACf;AAEA;;;;CAIC,GACD,KAAK,SAAS,CAAC,YAAY,GAAG,SAAS,aAAa,EAAE;IAClD,OAAO,UAAU,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;AACjD;AAEA;;;;CAIC,GACD,KAAK,SAAS,CAAC,cAAc,GAAG,SAAS,eAAe,IAAI;IACxD,OAAO,UAAU,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE;AACnD"}},
    {"offset": {"line": 4504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4508, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/encoder.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = require(\"./enum\"),\r\n    types    = require(\"./types\"),\r\n    util     = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG;AAEjB,IAAI,sGACA,wGACA;AAEJ;;;;;;;;CAQC,GACD,SAAS,eAAe,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAC/C,OAAO,MAAM,YAAY,CAAC,KAAK,GACzB,IAAI,gDAAgD,YAAY,KAAK,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,KACxH,IAAI,qDAAqD,YAAY,KAAK,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM;AAC5G;AAEA;;;;CAIC,GACD,SAAS,QAAQ,KAAK;IAClB,0EAA0E,GAC1E,IAAI,MAAM,KAAK,OAAO,CAAC;QAAC;QAAK;KAAI,EAAE,MAAM,IAAI,GAAG,WAC/C,UACI;IAEL,IAAI,GAAG;IAEP,iGAAiG;IACjG,IAAI,SAAS,eAAe,GAAG,MAAM,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,iBAAiB;IAEpF,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,EAAE,EAAG;QACpC,IAAI,QAAW,MAAM,CAAC,EAAE,CAAC,OAAO,IAC5B,QAAW,MAAM,YAAY,CAAC,OAAO,CAAC,QACtC,OAAW,MAAM,YAAY,YAAY,OAAO,UAAU,MAAM,IAAI,EACpE,WAAW,MAAM,KAAK,CAAC,KAAK;QAC5B,MAAW,MAAM,KAAK,QAAQ,CAAC,MAAM,IAAI;QAE7C,aAAa;QACb,IAAI,MAAM,GAAG,EAAE;YACX,IACP,mDAAmD,KAAK,MAAM,IAAI,EAAE,4BAA4B;aAC5F,oDAAoD,KAChD,4CAA4C,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,MAAM,CAAC,MAAM,OAAO,CAAC,EAAE,MAAM,OAAO;YACtH,IAAI,aAAa,WAAW,IAC3B,qEAAqE,OAAO,MAAM,kBAAkB;iBAChG,IACJ,sCAAsC,KAAK,UAAU,MAAM;YAC5D,IACH,KACJ;QAEO,kBAAkB;QACtB,OAAO,IAAI,MAAM,QAAQ,EAAE;YAAE,IAChC,4BAA4B,KAAK,MAAM,4BAA4B;YAE5D,kBAAkB;YAClB,IAAI,MAAM,MAAM,IAAI,MAAM,MAAM,CAAC,KAAK,KAAK,WAAW;gBAAE,IAE3D,uBAAuB,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,GAC/C,gCAAgC,KAC5B,eAAe,MAAM,KACzB;YAEG,aAAa;YACb,OAAO;gBAAE,IAEZ,gCAAgC;gBACzB,IAAI,aAAa,WACrB,eAAe,KAAK,OAAO,OAAO,MAAM;qBAC/B,IACR,0BAA0B,CAAC,MAAM,EAAE,IAAI,IAAI,QAAQ,MAAM,GAAG,MAAM;YAEnE;YAAE,IACT;QAEG,eAAe;QACf,OAAO;YACH,IAAI,MAAM,QAAQ,EAAE,IAC3B,kDAAkD,KAAK,MAAM,IAAI,GAAG,4BAA4B;YAEzF,IAAI,aAAa,WACrB,eAAe,KAAK,OAAO,OAAO;iBACzB,IACR,uBAAuB,CAAC,MAAM,EAAE,IAAI,IAAI,QAAQ,MAAM,GAAG,MAAM;QAEhE;IACJ;IAEA,OAAO,IACN;AACD,yEAAyE,GAC7E"}},
    {"offset": {"line": 4566, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4570, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/index-light.js"],"sourcesContent":["\"use strict\";\r\nvar protobuf = module.exports = require(\"./index-minimal\");\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = require(\"./encoder\");\r\nprotobuf.decoder          = require(\"./decoder\");\r\nprotobuf.verifier         = require(\"./verifier\");\r\nprotobuf.converter        = require(\"./converter\");\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = require(\"./object\");\r\nprotobuf.Namespace        = require(\"./namespace\");\r\nprotobuf.Root             = require(\"./root\");\r\nprotobuf.Enum             = require(\"./enum\");\r\nprotobuf.Type             = require(\"./type\");\r\nprotobuf.Field            = require(\"./field\");\r\nprotobuf.OneOf            = require(\"./oneof\");\r\nprotobuf.MapField         = require(\"./mapfield\");\r\nprotobuf.Service          = require(\"./service\");\r\nprotobuf.Method           = require(\"./method\");\r\n\r\n// Runtime\r\nprotobuf.Message          = require(\"./message\");\r\nprotobuf.wrappers         = require(\"./wrappers\");\r\n\r\n// Utility\r\nprotobuf.types            = require(\"./types\");\r\nprotobuf.util             = require(\"./util\");\r\n\r\n// Set up possibly cyclic reflection dependencies\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n"],"names":[],"mappings":"AAAA;AACA,IAAI,WAAW,OAAO,OAAO;AAE7B,SAAS,KAAK,GAAG;AAEjB;;;;;;;CAOC,GAED;;;;;;;CAOC,GACD,SAAS,KAAK,QAAQ,EAAE,IAAI,EAAE,QAAQ;IAClC,IAAI,OAAO,SAAS,YAAY;QAC5B,WAAW;QACX,OAAO,IAAI,SAAS,IAAI;IAC5B,OAAO,IAAI,CAAC,MACR,OAAO,IAAI,SAAS,IAAI;IAC5B,OAAO,KAAK,IAAI,CAAC,UAAU;AAC/B;AAEA;;;;;;;;;CASC,GACD,kEAAkE;AAElE;;;;;;;;;CASC,GACD,4DAA4D;AAE5D,SAAS,IAAI,GAAG;AAEhB;;;;;;;CAOC,GACD,SAAS,SAAS,QAAQ,EAAE,IAAI;IAC5B,IAAI,CAAC,MACD,OAAO,IAAI,SAAS,IAAI;IAC5B,OAAO,KAAK,QAAQ,CAAC;AACzB;AAEA,SAAS,QAAQ,GAAG;AAEpB,gBAAgB;AAChB,SAAS,OAAO;AAChB,SAAS,OAAO;AAChB,SAAS,QAAQ;AACjB,SAAS,SAAS;AAElB,aAAa;AACb,SAAS,gBAAgB;AACzB,SAAS,SAAS;AAClB,SAAS,IAAI;AACb,SAAS,IAAI;AACb,SAAS,IAAI;AACb,SAAS,KAAK;AACd,SAAS,KAAK;AACd,SAAS,QAAQ;AACjB,SAAS,OAAO;AAChB,SAAS,MAAM;AAEf,UAAU;AACV,SAAS,OAAO;AAChB,SAAS,QAAQ;AAEjB,UAAU;AACV,SAAS,KAAK;AACd,SAAS,IAAI;AAEb,iDAAiD;AACjD,SAAS,gBAAgB,CAAC,UAAU,CAAC,SAAS,IAAI;AAClD,SAAS,SAAS,CAAC,UAAU,CAAC,SAAS,IAAI,EAAE,SAAS,OAAO,EAAE,SAAS,IAAI;AAC5E,SAAS,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI;AACtC,SAAS,KAAK,CAAC,UAAU,CAAC,SAAS,IAAI"}},
    {"offset": {"line": 4654, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4658, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/tokenize.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = tokenize;\r\n\r\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\r\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\r\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\r\n\r\nvar setCommentRe = /^ *[*/]+ */,\r\n    setCommentAltRe = /^\\s*\\*?\\/*/,\r\n    setCommentSplitRe = /\\n/g,\r\n    whitespaceRe = /\\s/,\r\n    unescapeRe = /\\\\(.?)/g;\r\n\r\nvar unescapeMap = {\r\n    \"0\": \"\\0\",\r\n    \"r\": \"\\r\",\r\n    \"n\": \"\\n\",\r\n    \"t\": \"\\t\"\r\n};\r\n\r\n/**\r\n * Unescapes a string.\r\n * @param {string} str String to unescape\r\n * @returns {string} Unescaped string\r\n * @property {Object.<string,string>} map Special characters map\r\n * @memberof tokenize\r\n */\r\nfunction unescape(str) {\r\n    return str.replace(unescapeRe, function($0, $1) {\r\n        switch ($1) {\r\n            case \"\\\\\":\r\n            case \"\":\r\n                return $1;\r\n            default:\r\n                return unescapeMap[$1] || \"\";\r\n        }\r\n    });\r\n}\r\n\r\ntokenize.unescape = unescape;\r\n\r\n/**\r\n * Gets the next token and advances.\r\n * @typedef TokenizerHandleNext\r\n * @type {function}\r\n * @returns {string|null} Next token or `null` on eof\r\n */\r\n\r\n/**\r\n * Peeks for the next token.\r\n * @typedef TokenizerHandlePeek\r\n * @type {function}\r\n * @returns {string|null} Next token or `null` on eof\r\n */\r\n\r\n/**\r\n * Pushes a token back to the stack.\r\n * @typedef TokenizerHandlePush\r\n * @type {function}\r\n * @param {string} token Token\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Skips the next token.\r\n * @typedef TokenizerHandleSkip\r\n * @type {function}\r\n * @param {string} expected Expected token\r\n * @param {boolean} [optional=false] If optional\r\n * @returns {boolean} Whether the token matched\r\n * @throws {Error} If the token didn't match and is not optional\r\n */\r\n\r\n/**\r\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\r\n * @typedef TokenizerHandleCmnt\r\n * @type {function}\r\n * @param {number} [line] Line number\r\n * @returns {string|null} Comment text or `null` if none\r\n */\r\n\r\n/**\r\n * Handle object returned from {@link tokenize}.\r\n * @interface ITokenizerHandle\r\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\r\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\r\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\r\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\r\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\r\n * @property {number} line Current line number\r\n */\r\n\r\n/**\r\n * Tokenizes the given .proto source and returns an object with useful utility functions.\r\n * @param {string} source Source contents\r\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\r\n * @returns {ITokenizerHandle} Tokenizer handle\r\n */\r\nfunction tokenize(source, alternateCommentMode) {\r\n    /* eslint-disable callback-return */\r\n    source = source.toString();\r\n\r\n    var offset = 0,\r\n        length = source.length,\r\n        line = 1,\r\n        lastCommentLine = 0,\r\n        comments = {};\r\n\r\n    var stack = [];\r\n\r\n    var stringDelim = null;\r\n\r\n    /* istanbul ignore next */\r\n    /**\r\n     * Creates an error for illegal syntax.\r\n     * @param {string} subject Subject\r\n     * @returns {Error} Error created\r\n     * @inner\r\n     */\r\n    function illegal(subject) {\r\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\r\n    }\r\n\r\n    /**\r\n     * Reads a string till its end.\r\n     * @returns {string} String read\r\n     * @inner\r\n     */\r\n    function readString() {\r\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\r\n        re.lastIndex = offset - 1;\r\n        var match = re.exec(source);\r\n        if (!match)\r\n            throw illegal(\"string\");\r\n        offset = re.lastIndex;\r\n        push(stringDelim);\r\n        stringDelim = null;\r\n        return unescape(match[1]);\r\n    }\r\n\r\n    /**\r\n     * Gets the character at `pos` within the source.\r\n     * @param {number} pos Position\r\n     * @returns {string} Character\r\n     * @inner\r\n     */\r\n    function charAt(pos) {\r\n        return source.charAt(pos);\r\n    }\r\n\r\n    /**\r\n     * Sets the current comment text.\r\n     * @param {number} start Start offset\r\n     * @param {number} end End offset\r\n     * @param {boolean} isLeading set if a leading comment\r\n     * @returns {undefined}\r\n     * @inner\r\n     */\r\n    function setComment(start, end, isLeading) {\r\n        var comment = {\r\n            type: source.charAt(start++),\r\n            lineEmpty: false,\r\n            leading: isLeading,\r\n        };\r\n        var lookback;\r\n        if (alternateCommentMode) {\r\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\r\n        } else {\r\n            lookback = 3;  // \"///\" or \"/**\"\r\n        }\r\n        var commentOffset = start - lookback,\r\n            c;\r\n        do {\r\n            if (--commentOffset < 0 ||\r\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\r\n                comment.lineEmpty = true;\r\n                break;\r\n            }\r\n        } while (c === \" \" || c === \"\\t\");\r\n        var lines = source\r\n            .substring(start, end)\r\n            .split(setCommentSplitRe);\r\n        for (var i = 0; i < lines.length; ++i)\r\n            lines[i] = lines[i]\r\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\r\n                .trim();\r\n        comment.text = lines\r\n            .join(\"\\n\")\r\n            .trim();\r\n\r\n        comments[line] = comment;\r\n        lastCommentLine = line;\r\n    }\r\n\r\n    function isDoubleSlashCommentLine(startOffset) {\r\n        var endOffset = findEndOfLine(startOffset);\r\n\r\n        // see if remaining line matches comment pattern\r\n        var lineText = source.substring(startOffset, endOffset);\r\n        var isComment = /^\\s*\\/\\//.test(lineText);\r\n        return isComment;\r\n    }\r\n\r\n    function findEndOfLine(cursor) {\r\n        // find end of cursor's line\r\n        var endOffset = cursor;\r\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\r\n            endOffset++;\r\n        }\r\n        return endOffset;\r\n    }\r\n\r\n    /**\r\n     * Obtains the next token.\r\n     * @returns {string|null} Next token or `null` on eof\r\n     * @inner\r\n     */\r\n    function next() {\r\n        if (stack.length > 0)\r\n            return stack.shift();\r\n        if (stringDelim)\r\n            return readString();\r\n        var repeat,\r\n            prev,\r\n            curr,\r\n            start,\r\n            isDoc,\r\n            isLeadingComment = offset === 0;\r\n        do {\r\n            if (offset === length)\r\n                return null;\r\n            repeat = false;\r\n            while (whitespaceRe.test(curr = charAt(offset))) {\r\n                if (curr === \"\\n\") {\r\n                    isLeadingComment = true;\r\n                    ++line;\r\n                }\r\n                if (++offset === length)\r\n                    return null;\r\n            }\r\n\r\n            if (charAt(offset) === \"/\") {\r\n                if (++offset === length) {\r\n                    throw illegal(\"comment\");\r\n                }\r\n                if (charAt(offset) === \"/\") { // Line\r\n                    if (!alternateCommentMode) {\r\n                        // check for triple-slash comment\r\n                        isDoc = charAt(start = offset + 1) === \"/\";\r\n\r\n                        while (charAt(++offset) !== \"\\n\") {\r\n                            if (offset === length) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        ++offset;\r\n                        if (isDoc) {\r\n                            setComment(start, offset - 1, isLeadingComment);\r\n                            // Trailing comment cannot not be multi-line,\r\n                            // so leading comment state should be reset to handle potential next comments\r\n                            isLeadingComment = true;\r\n                        }\r\n                        ++line;\r\n                        repeat = true;\r\n                    } else {\r\n                        // check for double-slash comments, consolidating consecutive lines\r\n                        start = offset;\r\n                        isDoc = false;\r\n                        if (isDoubleSlashCommentLine(offset - 1)) {\r\n                            isDoc = true;\r\n                            do {\r\n                                offset = findEndOfLine(offset);\r\n                                if (offset === length) {\r\n                                    break;\r\n                                }\r\n                                offset++;\r\n                                if (!isLeadingComment) {\r\n                                    // Trailing comment cannot not be multi-line\r\n                                    break;\r\n                                }\r\n                            } while (isDoubleSlashCommentLine(offset));\r\n                        } else {\r\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\r\n                        }\r\n                        if (isDoc) {\r\n                            setComment(start, offset, isLeadingComment);\r\n                            isLeadingComment = true;\r\n                        }\r\n                        line++;\r\n                        repeat = true;\r\n                    }\r\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\r\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\r\n                    start = offset + 1;\r\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\r\n                    do {\r\n                        if (curr === \"\\n\") {\r\n                            ++line;\r\n                        }\r\n                        if (++offset === length) {\r\n                            throw illegal(\"comment\");\r\n                        }\r\n                        prev = curr;\r\n                        curr = charAt(offset);\r\n                    } while (prev !== \"*\" || curr !== \"/\");\r\n                    ++offset;\r\n                    if (isDoc) {\r\n                        setComment(start, offset - 2, isLeadingComment);\r\n                        isLeadingComment = true;\r\n                    }\r\n                    repeat = true;\r\n                } else {\r\n                    return \"/\";\r\n                }\r\n            }\r\n        } while (repeat);\r\n\r\n        // offset !== length if we got here\r\n\r\n        var end = offset;\r\n        delimRe.lastIndex = 0;\r\n        var delim = delimRe.test(charAt(end++));\r\n        if (!delim)\r\n            while (end < length && !delimRe.test(charAt(end)))\r\n                ++end;\r\n        var token = source.substring(offset, offset = end);\r\n        if (token === \"\\\"\" || token === \"'\")\r\n            stringDelim = token;\r\n        return token;\r\n    }\r\n\r\n    /**\r\n     * Pushes a token back to the stack.\r\n     * @param {string} token Token\r\n     * @returns {undefined}\r\n     * @inner\r\n     */\r\n    function push(token) {\r\n        stack.push(token);\r\n    }\r\n\r\n    /**\r\n     * Peeks for the next token.\r\n     * @returns {string|null} Token or `null` on eof\r\n     * @inner\r\n     */\r\n    function peek() {\r\n        if (!stack.length) {\r\n            var token = next();\r\n            if (token === null)\r\n                return null;\r\n            push(token);\r\n        }\r\n        return stack[0];\r\n    }\r\n\r\n    /**\r\n     * Skips a token.\r\n     * @param {string} expected Expected token\r\n     * @param {boolean} [optional=false] Whether the token is optional\r\n     * @returns {boolean} `true` when skipped, `false` if not\r\n     * @throws {Error} When a required token is not present\r\n     * @inner\r\n     */\r\n    function skip(expected, optional) {\r\n        var actual = peek(),\r\n            equals = actual === expected;\r\n        if (equals) {\r\n            next();\r\n            return true;\r\n        }\r\n        if (!optional)\r\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets a comment.\r\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\r\n     * @returns {string|null} Comment text\r\n     * @inner\r\n     */\r\n    function cmnt(trailingLine) {\r\n        var ret = null;\r\n        var comment;\r\n        if (trailingLine === undefined) {\r\n            comment = comments[line - 1];\r\n            delete comments[line - 1];\r\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\r\n                ret = comment.leading ? comment.text : null;\r\n            }\r\n        } else {\r\n            /* istanbul ignore else */\r\n            if (lastCommentLine < trailingLine) {\r\n                peek();\r\n            }\r\n            comment = comments[trailingLine];\r\n            delete comments[trailingLine];\r\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\r\n                ret = comment.leading ? null : comment.text;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    return Object.defineProperty({\r\n        next: next,\r\n        peek: peek,\r\n        push: push,\r\n        skip: skip,\r\n        cmnt: cmnt\r\n    }, \"line\", {\r\n        get: function() { return line; }\r\n    });\r\n    /* eslint-enable callback-return */\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4986, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4990, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/parse.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = parse;\r\n\r\nparse.filename = null;\r\nparse.defaults = { keepCase: false };\r\n\r\nvar tokenize  = require(\"./tokenize\"),\r\n    Root      = require(\"./root\"),\r\n    Type      = require(\"./type\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Enum      = require(\"./enum\"),\r\n    Service   = require(\"./service\"),\r\n    Method    = require(\"./method\"),\r\n    types     = require(\"./types\"),\r\n    util      = require(\"./util\");\r\n\r\nvar base10Re    = /^[1-9][0-9]*$/,\r\n    base10NegRe = /^-?[1-9][0-9]*$/,\r\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\r\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\r\n    base8Re     = /^0[0-7]+$/,\r\n    base8NegRe  = /^-?0[0-7]+$/,\r\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\r\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\r\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\r\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\r\n\r\n/**\r\n * Result object returned from {@link parse}.\r\n * @interface IParserResult\r\n * @property {string|undefined} package Package name, if declared\r\n * @property {string[]|undefined} imports Imports, if any\r\n * @property {string[]|undefined} weakImports Weak imports, if any\r\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\r\n * @property {Root} root Populated root instance\r\n */\r\n\r\n/**\r\n * Options modifying the behavior of {@link parse}.\r\n * @interface IParseOptions\r\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\r\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\r\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\r\n */\r\n\r\n/**\r\n * Options modifying the behavior of JSON serialization.\r\n * @interface IToJSONOptions\r\n * @property {boolean} [keepComments=false] Serializes comments.\r\n */\r\n\r\n/**\r\n * Parses the given .proto source and returns an object with the parsed contents.\r\n * @param {string} source Source contents\r\n * @param {Root} root Root to populate\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {IParserResult} Parser result\r\n * @property {string} filename=null Currently processing file name for error reporting, if known\r\n * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n */\r\nfunction parse(source, root, options) {\r\n    /* eslint-disable callback-return */\r\n    if (!(root instanceof Root)) {\r\n        options = root;\r\n        root = new Root();\r\n    }\r\n    if (!options)\r\n        options = parse.defaults;\r\n\r\n    var preferTrailingComment = options.preferTrailingComment || false;\r\n    var tn = tokenize(source, options.alternateCommentMode || false),\r\n        next = tn.next,\r\n        push = tn.push,\r\n        peek = tn.peek,\r\n        skip = tn.skip,\r\n        cmnt = tn.cmnt;\r\n\r\n    var head = true,\r\n        pkg,\r\n        imports,\r\n        weakImports,\r\n        syntax,\r\n        isProto3 = false;\r\n\r\n    var ptr = root;\r\n\r\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\r\n\r\n    /* istanbul ignore next */\r\n    function illegal(token, name, insideTryCatch) {\r\n        var filename = parse.filename;\r\n        if (!insideTryCatch)\r\n            parse.filename = null;\r\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\r\n    }\r\n\r\n    function readString() {\r\n        var values = [],\r\n            token;\r\n        do {\r\n            /* istanbul ignore if */\r\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\r\n                throw illegal(token);\r\n\r\n            values.push(next());\r\n            skip(token);\r\n            token = peek();\r\n        } while (token === \"\\\"\" || token === \"'\");\r\n        return values.join(\"\");\r\n    }\r\n\r\n    function readValue(acceptTypeRef) {\r\n        var token = next();\r\n        switch (token) {\r\n            case \"'\":\r\n            case \"\\\"\":\r\n                push(token);\r\n                return readString();\r\n            case \"true\": case \"TRUE\":\r\n                return true;\r\n            case \"false\": case \"FALSE\":\r\n                return false;\r\n        }\r\n        try {\r\n            return parseNumber(token, /* insideTryCatch */ true);\r\n        } catch (e) {\r\n\r\n            /* istanbul ignore else */\r\n            if (acceptTypeRef && typeRefRe.test(token))\r\n                return token;\r\n\r\n            /* istanbul ignore next */\r\n            throw illegal(token, \"value\");\r\n        }\r\n    }\r\n\r\n    function readRanges(target, acceptStrings) {\r\n        var token, start;\r\n        do {\r\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\r\n                target.push(readString());\r\n            else\r\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\r\n        } while (skip(\",\", true));\r\n        var dummy = {options: undefined};\r\n        dummy.setOption = function(name, value) {\r\n          if (this.options === undefined) this.options = {};\r\n          this.options[name] = value;\r\n        };\r\n        ifBlock(\r\n            dummy,\r\n            function parseRange_block(token) {\r\n              /* istanbul ignore else */\r\n              if (token === \"option\") {\r\n                parseOption(dummy, token);  // skip\r\n                skip(\";\");\r\n              } else\r\n                throw illegal(token);\r\n            },\r\n            function parseRange_line() {\r\n              parseInlineOptions(dummy);  // skip\r\n            });\r\n    }\r\n\r\n    function parseNumber(token, insideTryCatch) {\r\n        var sign = 1;\r\n        if (token.charAt(0) === \"-\") {\r\n            sign = -1;\r\n            token = token.substring(1);\r\n        }\r\n        switch (token) {\r\n            case \"inf\": case \"INF\": case \"Inf\":\r\n                return sign * Infinity;\r\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\r\n                return NaN;\r\n            case \"0\":\r\n                return 0;\r\n        }\r\n        if (base10Re.test(token))\r\n            return sign * parseInt(token, 10);\r\n        if (base16Re.test(token))\r\n            return sign * parseInt(token, 16);\r\n        if (base8Re.test(token))\r\n            return sign * parseInt(token, 8);\r\n\r\n        /* istanbul ignore else */\r\n        if (numberRe.test(token))\r\n            return sign * parseFloat(token);\r\n\r\n        /* istanbul ignore next */\r\n        throw illegal(token, \"number\", insideTryCatch);\r\n    }\r\n\r\n    function parseId(token, acceptNegative) {\r\n        switch (token) {\r\n            case \"max\": case \"MAX\": case \"Max\":\r\n                return 536870911;\r\n            case \"0\":\r\n                return 0;\r\n        }\r\n\r\n        /* istanbul ignore if */\r\n        if (!acceptNegative && token.charAt(0) === \"-\")\r\n            throw illegal(token, \"id\");\r\n\r\n        if (base10NegRe.test(token))\r\n            return parseInt(token, 10);\r\n        if (base16NegRe.test(token))\r\n            return parseInt(token, 16);\r\n\r\n        /* istanbul ignore else */\r\n        if (base8NegRe.test(token))\r\n            return parseInt(token, 8);\r\n\r\n        /* istanbul ignore next */\r\n        throw illegal(token, \"id\");\r\n    }\r\n\r\n    function parsePackage() {\r\n\r\n        /* istanbul ignore if */\r\n        if (pkg !== undefined)\r\n            throw illegal(\"package\");\r\n\r\n        pkg = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(pkg))\r\n            throw illegal(pkg, \"name\");\r\n\r\n        ptr = ptr.define(pkg);\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseImport() {\r\n        var token = peek();\r\n        var whichImports;\r\n        switch (token) {\r\n            case \"weak\":\r\n                whichImports = weakImports || (weakImports = []);\r\n                next();\r\n                break;\r\n            case \"public\":\r\n                next();\r\n                // eslint-disable-next-line no-fallthrough\r\n            default:\r\n                whichImports = imports || (imports = []);\r\n                break;\r\n        }\r\n        token = readString();\r\n        skip(\";\");\r\n        whichImports.push(token);\r\n    }\r\n\r\n    function parseSyntax() {\r\n        skip(\"=\");\r\n        syntax = readString();\r\n        isProto3 = syntax === \"proto3\";\r\n\r\n        /* istanbul ignore if */\r\n        if (!isProto3 && syntax !== \"proto2\")\r\n            throw illegal(syntax, \"syntax\");\r\n\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseCommon(parent, token) {\r\n        switch (token) {\r\n\r\n            case \"option\":\r\n                parseOption(parent, token);\r\n                skip(\";\");\r\n                return true;\r\n\r\n            case \"message\":\r\n                parseType(parent, token);\r\n                return true;\r\n\r\n            case \"enum\":\r\n                parseEnum(parent, token);\r\n                return true;\r\n\r\n            case \"service\":\r\n                parseService(parent, token);\r\n                return true;\r\n\r\n            case \"extend\":\r\n                parseExtension(parent, token);\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function ifBlock(obj, fnIf, fnElse) {\r\n        var trailingLine = tn.line;\r\n        if (obj) {\r\n            if(typeof obj.comment !== \"string\") {\r\n              obj.comment = cmnt(); // try block-type comment\r\n            }\r\n            obj.filename = parse.filename;\r\n        }\r\n        if (skip(\"{\", true)) {\r\n            var token;\r\n            while ((token = next()) !== \"}\")\r\n                fnIf(token);\r\n            skip(\";\", true);\r\n        } else {\r\n            if (fnElse)\r\n                fnElse();\r\n            skip(\";\");\r\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\r\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\r\n        }\r\n    }\r\n\r\n    function parseType(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"type name\");\r\n\r\n        var type = new Type(token);\r\n        ifBlock(type, function parseType_block(token) {\r\n            if (parseCommon(type, token))\r\n                return;\r\n\r\n            switch (token) {\r\n\r\n                case \"map\":\r\n                    parseMapField(type, token);\r\n                    break;\r\n\r\n                case \"required\":\r\n                case \"repeated\":\r\n                    parseField(type, token);\r\n                    break;\r\n\r\n                case \"optional\":\r\n                    /* istanbul ignore if */\r\n                    if (isProto3) {\r\n                        parseField(type, \"proto3_optional\");\r\n                    } else {\r\n                        parseField(type, \"optional\");\r\n                    }\r\n                    break;\r\n\r\n                case \"oneof\":\r\n                    parseOneOf(type, token);\r\n                    break;\r\n\r\n                case \"extensions\":\r\n                    readRanges(type.extensions || (type.extensions = []));\r\n                    break;\r\n\r\n                case \"reserved\":\r\n                    readRanges(type.reserved || (type.reserved = []), true);\r\n                    break;\r\n\r\n                default:\r\n                    /* istanbul ignore if */\r\n                    if (!isProto3 || !typeRefRe.test(token))\r\n                        throw illegal(token);\r\n\r\n                    push(token);\r\n                    parseField(type, \"optional\");\r\n                    break;\r\n            }\r\n        });\r\n        parent.add(type);\r\n    }\r\n\r\n    function parseField(parent, rule, extend) {\r\n        var type = next();\r\n        if (type === \"group\") {\r\n            parseGroup(parent, rule);\r\n            return;\r\n        }\r\n        // Type names can consume multiple tokens, in multiple variants:\r\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\r\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\r\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\r\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\r\n        // Keep reading tokens until we get a type name with no period at the end,\r\n        // and the next token does not start with a period.\r\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\r\n            type += next();\r\n        }\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(type))\r\n            throw illegal(type, \"type\");\r\n\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        name = applyCase(name);\r\n        skip(\"=\");\r\n\r\n        var field = new Field(name, parseId(next()), type, rule, extend);\r\n        ifBlock(field, function parseField_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(field, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseField_line() {\r\n            parseInlineOptions(field);\r\n        });\r\n\r\n        if (rule === \"proto3_optional\") {\r\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\r\n            var oneof = new OneOf(\"_\" + name);\r\n            field.setOption(\"proto3_optional\", true);\r\n            oneof.add(field);\r\n            parent.add(oneof);\r\n        } else {\r\n            parent.add(field);\r\n        }\r\n\r\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\r\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\r\n        // all known packable types and anything that could be an enum (= is not a basic type).\r\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\r\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\r\n    }\r\n\r\n    function parseGroup(parent, rule) {\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        var fieldName = util.lcFirst(name);\r\n        if (name === fieldName)\r\n            name = util.ucFirst(name);\r\n        skip(\"=\");\r\n        var id = parseId(next());\r\n        var type = new Type(name);\r\n        type.group = true;\r\n        var field = new Field(fieldName, id, name, rule);\r\n        field.filename = parse.filename;\r\n        ifBlock(type, function parseGroup_block(token) {\r\n            switch (token) {\r\n\r\n                case \"option\":\r\n                    parseOption(type, token);\r\n                    skip(\";\");\r\n                    break;\r\n\r\n                case \"required\":\r\n                case \"repeated\":\r\n                    parseField(type, token);\r\n                    break;\r\n\r\n                case \"optional\":\r\n                    /* istanbul ignore if */\r\n                    if (isProto3) {\r\n                        parseField(type, \"proto3_optional\");\r\n                    } else {\r\n                        parseField(type, \"optional\");\r\n                    }\r\n                    break;\r\n\r\n                case \"message\":\r\n                    parseType(type, token);\r\n                    break;\r\n\r\n                case \"enum\":\r\n                    parseEnum(type, token);\r\n                    break;\r\n\r\n                /* istanbul ignore next */\r\n                default:\r\n                    throw illegal(token); // there are no groups with proto3 semantics\r\n            }\r\n        });\r\n        parent.add(type)\r\n              .add(field);\r\n    }\r\n\r\n    function parseMapField(parent) {\r\n        skip(\"<\");\r\n        var keyType = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (types.mapKey[keyType] === undefined)\r\n            throw illegal(keyType, \"type\");\r\n\r\n        skip(\",\");\r\n        var valueType = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(valueType))\r\n            throw illegal(valueType, \"type\");\r\n\r\n        skip(\">\");\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        skip(\"=\");\r\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\r\n        ifBlock(field, function parseMapField_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(field, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseMapField_line() {\r\n            parseInlineOptions(field);\r\n        });\r\n        parent.add(field);\r\n    }\r\n\r\n    function parseOneOf(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var oneof = new OneOf(applyCase(token));\r\n        ifBlock(oneof, function parseOneOf_block(token) {\r\n            if (token === \"option\") {\r\n                parseOption(oneof, token);\r\n                skip(\";\");\r\n            } else {\r\n                push(token);\r\n                parseField(oneof, \"optional\");\r\n            }\r\n        });\r\n        parent.add(oneof);\r\n    }\r\n\r\n    function parseEnum(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var enm = new Enum(token);\r\n        ifBlock(enm, function parseEnum_block(token) {\r\n          switch(token) {\r\n            case \"option\":\r\n              parseOption(enm, token);\r\n              skip(\";\");\r\n              break;\r\n\r\n            case \"reserved\":\r\n              readRanges(enm.reserved || (enm.reserved = []), true);\r\n              break;\r\n\r\n            default:\r\n              parseEnumValue(enm, token);\r\n          }\r\n        });\r\n        parent.add(enm);\r\n    }\r\n\r\n    function parseEnumValue(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token))\r\n            throw illegal(token, \"name\");\r\n\r\n        skip(\"=\");\r\n        var value = parseId(next(), true),\r\n            dummy = {\r\n                options: undefined\r\n            };\r\n        dummy.setOption = function(name, value) {\r\n            if (this.options === undefined)\r\n                this.options = {};\r\n            this.options[name] = value;\r\n        };\r\n        ifBlock(dummy, function parseEnumValue_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(dummy, token); // skip\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseEnumValue_line() {\r\n            parseInlineOptions(dummy); // skip\r\n        });\r\n        parent.add(token, value, dummy.comment, dummy.options);\r\n    }\r\n\r\n    function parseOption(parent, token) {\r\n        var isCustom = skip(\"(\", true);\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var name = token;\r\n        var option = name;\r\n        var propName;\r\n\r\n        if (isCustom) {\r\n            skip(\")\");\r\n            name = \"(\" + name + \")\";\r\n            option = name;\r\n            token = peek();\r\n            if (fqTypeRefRe.test(token)) {\r\n                propName = token.slice(1); //remove '.' before property name\r\n                name += token;\r\n                next();\r\n            }\r\n        }\r\n        skip(\"=\");\r\n        var optionValue = parseOptionValue(parent, name);\r\n        setParsedOption(parent, option, optionValue, propName);\r\n    }\r\n\r\n    function parseOptionValue(parent, name) {\r\n        // { a: \"foo\" b { c: \"bar\" } }\r\n        if (skip(\"{\", true)) {\r\n            var objectResult = {};\r\n\r\n            while (!skip(\"}\", true)) {\r\n                /* istanbul ignore if */\r\n                if (!nameRe.test(token = next())) {\r\n                    throw illegal(token, \"name\");\r\n                }\r\n                if (token === null) {\r\n                  throw illegal(token, \"end of input\");\r\n                }\r\n\r\n                var value;\r\n                var propName = token;\r\n\r\n                skip(\":\", true);\r\n\r\n                if (peek() === \"{\")\r\n                    value = parseOptionValue(parent, name + \".\" + token);\r\n                else if (peek() === \"[\") {\r\n                    // option (my_option) = {\r\n                    //     repeated_value: [ \"foo\", \"bar\" ]\r\n                    // };\r\n                    value = [];\r\n                    var lastValue;\r\n                    if (skip(\"[\", true)) {\r\n                        do {\r\n                            lastValue = readValue(true);\r\n                            value.push(lastValue);\r\n                        } while (skip(\",\", true));\r\n                        skip(\"]\");\r\n                        if (typeof lastValue !== \"undefined\") {\r\n                            setOption(parent, name + \".\" + token, lastValue);\r\n                        }\r\n                    }\r\n                } else {\r\n                    value = readValue(true);\r\n                    setOption(parent, name + \".\" + token, value);\r\n                }\r\n\r\n                var prevValue = objectResult[propName];\r\n\r\n                if (prevValue)\r\n                    value = [].concat(prevValue).concat(value);\r\n\r\n                objectResult[propName] = value;\r\n\r\n                // Semicolons and commas can be optional\r\n                skip(\",\", true);\r\n                skip(\";\", true);\r\n            }\r\n\r\n            return objectResult;\r\n        }\r\n\r\n        var simpleValue = readValue(true);\r\n        setOption(parent, name, simpleValue);\r\n        return simpleValue;\r\n        // Does not enforce a delimiter to be universal\r\n    }\r\n\r\n    function setOption(parent, name, value) {\r\n        if (parent.setOption)\r\n            parent.setOption(name, value);\r\n    }\r\n\r\n    function setParsedOption(parent, name, value, propName) {\r\n        if (parent.setParsedOption)\r\n            parent.setParsedOption(name, value, propName);\r\n    }\r\n\r\n    function parseInlineOptions(parent) {\r\n        if (skip(\"[\", true)) {\r\n            do {\r\n                parseOption(parent, \"option\");\r\n            } while (skip(\",\", true));\r\n            skip(\"]\");\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function parseService(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"service name\");\r\n\r\n        var service = new Service(token);\r\n        ifBlock(service, function parseService_block(token) {\r\n            if (parseCommon(service, token))\r\n                return;\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"rpc\")\r\n                parseMethod(service, token);\r\n            else\r\n                throw illegal(token);\r\n        });\r\n        parent.add(service);\r\n    }\r\n\r\n    function parseMethod(parent, token) {\r\n        // Get the comment of the preceding line now (if one exists) in case the\r\n        // method is defined across multiple lines.\r\n        var commentText = cmnt();\r\n\r\n        var type = token;\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var name = token,\r\n            requestType, requestStream,\r\n            responseType, responseStream;\r\n\r\n        skip(\"(\");\r\n        if (skip(\"stream\", true))\r\n            requestStream = true;\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token);\r\n\r\n        requestType = token;\r\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\r\n        if (skip(\"stream\", true))\r\n            responseStream = true;\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token);\r\n\r\n        responseType = token;\r\n        skip(\")\");\r\n\r\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\r\n        method.comment = commentText;\r\n        ifBlock(method, function parseMethod_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(method, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        });\r\n        parent.add(method);\r\n    }\r\n\r\n    function parseExtension(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token, \"reference\");\r\n\r\n        var reference = token;\r\n        ifBlock(null, function parseExtension_block(token) {\r\n            switch (token) {\r\n\r\n                case \"required\":\r\n                case \"repeated\":\r\n                    parseField(parent, token, reference);\r\n                    break;\r\n\r\n                case \"optional\":\r\n                    /* istanbul ignore if */\r\n                    if (isProto3) {\r\n                        parseField(parent, \"proto3_optional\", reference);\r\n                    } else {\r\n                        parseField(parent, \"optional\", reference);\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    /* istanbul ignore if */\r\n                    if (!isProto3 || !typeRefRe.test(token))\r\n                        throw illegal(token);\r\n                    push(token);\r\n                    parseField(parent, \"optional\", reference);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    var token;\r\n    while ((token = next()) !== null) {\r\n        switch (token) {\r\n\r\n            case \"package\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parsePackage();\r\n                break;\r\n\r\n            case \"import\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parseImport();\r\n                break;\r\n\r\n            case \"syntax\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parseSyntax();\r\n                break;\r\n\r\n            case \"option\":\r\n\r\n                parseOption(ptr, token);\r\n                skip(\";\");\r\n                break;\r\n\r\n            default:\r\n\r\n                /* istanbul ignore else */\r\n                if (parseCommon(ptr, token)) {\r\n                    head = false;\r\n                    continue;\r\n                }\r\n\r\n                /* istanbul ignore next */\r\n                throw illegal(token);\r\n        }\r\n    }\r\n\r\n    parse.filename = null;\r\n    return {\r\n        \"package\"     : pkg,\r\n        \"imports\"     : imports,\r\n         weakImports  : weakImports,\r\n         syntax       : syntax,\r\n         root         : root\r\n    };\r\n}\r\n\r\n/**\r\n * Parses the given .proto source and returns an object with the parsed contents.\r\n * @name parse\r\n * @function\r\n * @param {string} source Source contents\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {IParserResult} Parser result\r\n * @property {string} filename=null Currently processing file name for error reporting, if known\r\n * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n * @variation 2\r\n */\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5603, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/common.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = common;\r\n\r\nvar commonRe = /\\/|\\./;\r\n\r\n/**\r\n * Provides common type definitions.\r\n * Can also be used to provide additional google types or your own custom types.\r\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\r\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\r\n * @returns {undefined}\r\n * @property {INamespace} google/protobuf/any.proto Any\r\n * @property {INamespace} google/protobuf/duration.proto Duration\r\n * @property {INamespace} google/protobuf/empty.proto Empty\r\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\r\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\r\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\r\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\r\n * @example\r\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\r\n * protobuf.common(\"descriptor\", descriptorJson);\r\n *\r\n * // manually provides a custom definition (uses my.foo namespace)\r\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\r\n */\r\nfunction common(name, json) {\r\n    if (!commonRe.test(name)) {\r\n        name = \"google/protobuf/\" + name + \".proto\";\r\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\r\n    }\r\n    common[name] = json;\r\n}\r\n\r\n// Not provided because of limited use (feel free to discuss or to provide yourself):\r\n//\r\n// google/protobuf/descriptor.proto\r\n// google/protobuf/source_context.proto\r\n// google/protobuf/type.proto\r\n//\r\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\r\n// the repository or package within the google/protobuf directory.\r\n\r\ncommon(\"any\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Any message.\r\n     * @interface IAny\r\n     * @type {Object}\r\n     * @property {string} [typeUrl]\r\n     * @property {Uint8Array} [bytes]\r\n     * @memberof common\r\n     */\r\n    Any: {\r\n        fields: {\r\n            type_url: {\r\n                type: \"string\",\r\n                id: 1\r\n            },\r\n            value: {\r\n                type: \"bytes\",\r\n                id: 2\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nvar timeType;\r\n\r\ncommon(\"duration\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Duration message.\r\n     * @interface IDuration\r\n     * @type {Object}\r\n     * @property {number|Long} [seconds]\r\n     * @property {number} [nanos]\r\n     * @memberof common\r\n     */\r\n    Duration: timeType = {\r\n        fields: {\r\n            seconds: {\r\n                type: \"int64\",\r\n                id: 1\r\n            },\r\n            nanos: {\r\n                type: \"int32\",\r\n                id: 2\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"timestamp\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Timestamp message.\r\n     * @interface ITimestamp\r\n     * @type {Object}\r\n     * @property {number|Long} [seconds]\r\n     * @property {number} [nanos]\r\n     * @memberof common\r\n     */\r\n    Timestamp: timeType\r\n});\r\n\r\ncommon(\"empty\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Empty message.\r\n     * @interface IEmpty\r\n     * @memberof common\r\n     */\r\n    Empty: {\r\n        fields: {}\r\n    }\r\n});\r\n\r\ncommon(\"struct\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Struct message.\r\n     * @interface IStruct\r\n     * @type {Object}\r\n     * @property {Object.<string,IValue>} [fields]\r\n     * @memberof common\r\n     */\r\n    Struct: {\r\n        fields: {\r\n            fields: {\r\n                keyType: \"string\",\r\n                type: \"Value\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Value message.\r\n     * @interface IValue\r\n     * @type {Object}\r\n     * @property {string} [kind]\r\n     * @property {0} [nullValue]\r\n     * @property {number} [numberValue]\r\n     * @property {string} [stringValue]\r\n     * @property {boolean} [boolValue]\r\n     * @property {IStruct} [structValue]\r\n     * @property {IListValue} [listValue]\r\n     * @memberof common\r\n     */\r\n    Value: {\r\n        oneofs: {\r\n            kind: {\r\n                oneof: [\r\n                    \"nullValue\",\r\n                    \"numberValue\",\r\n                    \"stringValue\",\r\n                    \"boolValue\",\r\n                    \"structValue\",\r\n                    \"listValue\"\r\n                ]\r\n            }\r\n        },\r\n        fields: {\r\n            nullValue: {\r\n                type: \"NullValue\",\r\n                id: 1\r\n            },\r\n            numberValue: {\r\n                type: \"double\",\r\n                id: 2\r\n            },\r\n            stringValue: {\r\n                type: \"string\",\r\n                id: 3\r\n            },\r\n            boolValue: {\r\n                type: \"bool\",\r\n                id: 4\r\n            },\r\n            structValue: {\r\n                type: \"Struct\",\r\n                id: 5\r\n            },\r\n            listValue: {\r\n                type: \"ListValue\",\r\n                id: 6\r\n            }\r\n        }\r\n    },\r\n\r\n    NullValue: {\r\n        values: {\r\n            NULL_VALUE: 0\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.ListValue message.\r\n     * @interface IListValue\r\n     * @type {Object}\r\n     * @property {Array.<IValue>} [values]\r\n     * @memberof common\r\n     */\r\n    ListValue: {\r\n        fields: {\r\n            values: {\r\n                rule: \"repeated\",\r\n                type: \"Value\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"wrappers\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.DoubleValue message.\r\n     * @interface IDoubleValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    DoubleValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"double\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.FloatValue message.\r\n     * @interface IFloatValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    FloatValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"float\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Int64Value message.\r\n     * @interface IInt64Value\r\n     * @type {Object}\r\n     * @property {number|Long} [value]\r\n     * @memberof common\r\n     */\r\n    Int64Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"int64\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.UInt64Value message.\r\n     * @interface IUInt64Value\r\n     * @type {Object}\r\n     * @property {number|Long} [value]\r\n     * @memberof common\r\n     */\r\n    UInt64Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"uint64\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Int32Value message.\r\n     * @interface IInt32Value\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    Int32Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"int32\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.UInt32Value message.\r\n     * @interface IUInt32Value\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    UInt32Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"uint32\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.BoolValue message.\r\n     * @interface IBoolValue\r\n     * @type {Object}\r\n     * @property {boolean} [value]\r\n     * @memberof common\r\n     */\r\n    BoolValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"bool\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.StringValue message.\r\n     * @interface IStringValue\r\n     * @type {Object}\r\n     * @property {string} [value]\r\n     * @memberof common\r\n     */\r\n    StringValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"string\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.BytesValue message.\r\n     * @interface IBytesValue\r\n     * @type {Object}\r\n     * @property {Uint8Array} [value]\r\n     * @memberof common\r\n     */\r\n    BytesValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"bytes\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"field_mask\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.FieldMask message.\r\n     * @interface IDoubleValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    FieldMask: {\r\n        fields: {\r\n            paths: {\r\n                rule: \"repeated\",\r\n                type: \"string\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Gets the root definition of the specified common proto file.\r\n *\r\n * Bundled definitions are:\r\n * - google/protobuf/any.proto\r\n * - google/protobuf/duration.proto\r\n * - google/protobuf/empty.proto\r\n * - google/protobuf/field_mask.proto\r\n * - google/protobuf/struct.proto\r\n * - google/protobuf/timestamp.proto\r\n * - google/protobuf/wrappers.proto\r\n *\r\n * @param {string} file Proto file name\r\n * @returns {INamespace|null} Root definition or `null` if not defined\r\n */\r\ncommon.get = function get(file) {\r\n    return common[file] || null;\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5963, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5967, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/src/index.js"],"sourcesContent":["\"use strict\";\r\nvar protobuf = module.exports = require(\"./index-light\");\r\n\r\nprotobuf.build = \"full\";\r\n\r\n// Parser\r\nprotobuf.tokenize         = require(\"./tokenize\");\r\nprotobuf.parse            = require(\"./parse\");\r\nprotobuf.common           = require(\"./common\");\r\n\r\n// Configure parser\r\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\r\n"],"names":[],"mappings":"AAAA;AACA,IAAI,WAAW,OAAO,OAAO;AAE7B,SAAS,KAAK,GAAG;AAEjB,SAAS;AACT,SAAS,QAAQ;AACjB,SAAS,KAAK;AACd,SAAS,MAAM;AAEf,mBAAmB;AACnB,SAAS,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,EAAE,SAAS,KAAK,EAAE,SAAS,MAAM"}},
    {"offset": {"line": 5976, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5980, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/index.js"],"sourcesContent":["// full library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index\");\r\n"],"names":[],"mappings":"AAAA,4BAA4B;AAE5B;AACA,OAAO,OAAO"}},
    {"offset": {"line": 5983, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5991, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/protobufjs/ext/descriptor/index.js"],"sourcesContent":["\"use strict\";\r\nvar $protobuf = require(\"../..\");\r\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\r\n\r\nvar Namespace = $protobuf.Namespace,\r\n    Root      = $protobuf.Root,\r\n    Enum      = $protobuf.Enum,\r\n    Type      = $protobuf.Type,\r\n    Field     = $protobuf.Field,\r\n    MapField  = $protobuf.MapField,\r\n    OneOf     = $protobuf.OneOf,\r\n    Service   = $protobuf.Service,\r\n    Method    = $protobuf.Method;\r\n\r\n// --- Root ---\r\n\r\n/**\r\n * Properties of a FileDescriptorSet message.\r\n * @interface IFileDescriptorSet\r\n * @property {IFileDescriptorProto[]} file Files\r\n */\r\n\r\n/**\r\n * Properties of a FileDescriptorProto message.\r\n * @interface IFileDescriptorProto\r\n * @property {string} [name] File name\r\n * @property {string} [package] Package\r\n * @property {*} [dependency] Not supported\r\n * @property {*} [publicDependency] Not supported\r\n * @property {*} [weakDependency] Not supported\r\n * @property {IDescriptorProto[]} [messageType] Nested message types\r\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\r\n * @property {IServiceDescriptorProto[]} [service] Nested services\r\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\r\n * @property {IFileOptions} [options] Options\r\n * @property {*} [sourceCodeInfo] Not supported\r\n * @property {string} [syntax=\"proto2\"] Syntax\r\n */\r\n\r\n/**\r\n * Properties of a FileOptions message.\r\n * @interface IFileOptions\r\n * @property {string} [javaPackage]\r\n * @property {string} [javaOuterClassname]\r\n * @property {boolean} [javaMultipleFiles]\r\n * @property {boolean} [javaGenerateEqualsAndHash]\r\n * @property {boolean} [javaStringCheckUtf8]\r\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\r\n * @property {string} [goPackage]\r\n * @property {boolean} [ccGenericServices]\r\n * @property {boolean} [javaGenericServices]\r\n * @property {boolean} [pyGenericServices]\r\n * @property {boolean} [deprecated]\r\n * @property {boolean} [ccEnableArenas]\r\n * @property {string} [objcClassPrefix]\r\n * @property {string} [csharpNamespace]\r\n */\r\n\r\n/**\r\n * Values of he FileOptions.OptimizeMode enum.\r\n * @typedef IFileOptionsOptimizeMode\r\n * @type {number}\r\n * @property {number} SPEED=1\r\n * @property {number} CODE_SIZE=2\r\n * @property {number} LITE_RUNTIME=3\r\n */\r\n\r\n/**\r\n * Creates a root from a descriptor set.\r\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Root} Root instance\r\n */\r\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\r\n\r\n    var root = new Root();\r\n\r\n    if (descriptor.file) {\r\n        var fileDescriptor,\r\n            filePackage;\r\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\r\n            filePackage = root;\r\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\r\n                filePackage = root.define(fileDescriptor[\"package\"]);\r\n            if (fileDescriptor.name && fileDescriptor.name.length)\r\n                root.files.push(filePackage.filename = fileDescriptor.name);\r\n            if (fileDescriptor.messageType)\r\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\r\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], fileDescriptor.syntax));\r\n            if (fileDescriptor.enumType)\r\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\r\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i]));\r\n            if (fileDescriptor.extension)\r\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\r\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i]));\r\n            if (fileDescriptor.service)\r\n                for (i = 0; i < fileDescriptor.service.length; ++i)\r\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i]));\r\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\r\n            if (opts) {\r\n                var ks = Object.keys(opts);\r\n                for (i = 0; i < ks.length; ++i)\r\n                    filePackage.setOption(ks[i], opts[ks[i]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n};\r\n\r\n/**\r\n * Converts a root to a descriptor set.\r\n * @returns {Message<IFileDescriptorSet>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nRoot.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var set = exports.FileDescriptorSet.create();\r\n    Root_toDescriptorRecursive(this, set.file, syntax);\r\n    return set;\r\n};\r\n\r\n// Traverses a namespace and assembles the descriptor set\r\nfunction Root_toDescriptorRecursive(ns, files, syntax) {\r\n\r\n    // Create a new file\r\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\r\n    if (syntax)\r\n        file.syntax = syntax;\r\n    if (!(ns instanceof Root))\r\n        file[\"package\"] = ns.fullName.substring(1);\r\n\r\n    // Add nested types\r\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\r\n        if ((nested = ns._nestedArray[i]) instanceof Type)\r\n            file.messageType.push(nested.toDescriptor(syntax));\r\n        else if (nested instanceof Enum)\r\n            file.enumType.push(nested.toDescriptor());\r\n        else if (nested instanceof Field)\r\n            file.extension.push(nested.toDescriptor(syntax));\r\n        else if (nested instanceof Service)\r\n            file.service.push(nested.toDescriptor());\r\n        else if (nested instanceof /* plain */ Namespace)\r\n            Root_toDescriptorRecursive(nested, files, syntax); // requires new file\r\n\r\n    // Keep package-level options\r\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\r\n\r\n    // And keep the file only if there is at least one nested object\r\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\r\n        files.push(file);\r\n}\r\n\r\n// --- Type ---\r\n\r\n/**\r\n * Properties of a DescriptorProto message.\r\n * @interface IDescriptorProto\r\n * @property {string} [name] Message type name\r\n * @property {IFieldDescriptorProto[]} [field] Fields\r\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\r\n * @property {IDescriptorProto[]} [nestedType] Nested message types\r\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\r\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\r\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\r\n * @property {IMessageOptions} [options] Not supported\r\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\r\n * @property {string[]} [reservedName] Reserved names\r\n */\r\n\r\n/**\r\n * Properties of a MessageOptions message.\r\n * @interface IMessageOptions\r\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\r\n */\r\n\r\n/**\r\n * Properties of an ExtensionRange message.\r\n * @interface IDescriptorProtoExtensionRange\r\n * @property {number} [start] Start field id\r\n * @property {number} [end] End field id\r\n */\r\n\r\n/**\r\n * Properties of a ReservedRange message.\r\n * @interface IDescriptorProtoReservedRange\r\n * @property {number} [start] Start field id\r\n * @property {number} [end] End field id\r\n */\r\n\r\nvar unnamedMessageIndex = 0;\r\n\r\n/**\r\n * Creates a type from a descriptor.\r\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n * @returns {Type} Type instance\r\n */\r\nType.fromDescriptor = function fromDescriptor(descriptor, syntax) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.DescriptorProto.decode(descriptor);\r\n\r\n    // Create the message type\r\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\r\n        i;\r\n\r\n    /* Oneofs */ if (descriptor.oneofDecl)\r\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\r\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\r\n    /* Fields */ if (descriptor.field)\r\n        for (i = 0; i < descriptor.field.length; ++i) {\r\n            var field = Field.fromDescriptor(descriptor.field[i], syntax);\r\n            type.add(field);\r\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\r\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\r\n        }\r\n    /* Extension fields */ if (descriptor.extension)\r\n        for (i = 0; i < descriptor.extension.length; ++i)\r\n            type.add(Field.fromDescriptor(descriptor.extension[i], syntax));\r\n    /* Nested types */ if (descriptor.nestedType)\r\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\r\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], syntax));\r\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\r\n                type.setOption(\"map_entry\", true);\r\n        }\r\n    /* Nested enums */ if (descriptor.enumType)\r\n        for (i = 0; i < descriptor.enumType.length; ++i)\r\n            type.add(Enum.fromDescriptor(descriptor.enumType[i]));\r\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\r\n        type.extensions = [];\r\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\r\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\r\n    }\r\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\r\n        type.reserved = [];\r\n        /* Ranges */ if (descriptor.reservedRange)\r\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\r\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\r\n        /* Names */ if (descriptor.reservedName)\r\n            for (i = 0; i < descriptor.reservedName.length; ++i)\r\n                type.reserved.push(descriptor.reservedName[i]);\r\n    }\r\n\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts a type to a descriptor.\r\n * @returns {Message<IDescriptorProto>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nType.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\r\n        i;\r\n\r\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\r\n        var fieldDescriptor;\r\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(syntax));\r\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\r\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType),\r\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType),\r\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\r\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\r\n                    : undefined;\r\n            descriptor.nestedType.push(exports.DescriptorProto.create({\r\n                name: fieldDescriptor.typeName,\r\n                field: [\r\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\r\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\r\n                ],\r\n                options: exports.MessageOptions.create({ mapEntry: true })\r\n            }));\r\n        }\r\n    }\r\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\r\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\r\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\r\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\r\n            descriptor.field.push(this._nestedArray[i].toDescriptor(syntax));\r\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\r\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(syntax));\r\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\r\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\r\n        // plain nested namespaces become packages instead in Root#toDescriptor\r\n    }\r\n    /* Extension ranges */ if (this.extensions)\r\n        for (i = 0; i < this.extensions.length; ++i)\r\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\r\n    /* Reserved... */ if (this.reserved)\r\n        for (i = 0; i < this.reserved.length; ++i)\r\n            /* Names */ if (typeof this.reserved[i] === \"string\")\r\n                descriptor.reservedName.push(this.reserved[i]);\r\n            /* Ranges */ else\r\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\r\n\r\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\r\n\r\n    return descriptor;\r\n};\r\n\r\n// --- Field ---\r\n\r\n/**\r\n * Properties of a FieldDescriptorProto message.\r\n * @interface IFieldDescriptorProto\r\n * @property {string} [name] Field name\r\n * @property {number} [number] Field id\r\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\r\n * @property {IFieldDescriptorProtoType} [type] Field basic type\r\n * @property {string} [typeName] Field type name\r\n * @property {string} [extendee] Extended type name\r\n * @property {string} [defaultValue] Literal default value\r\n * @property {number} [oneofIndex] Oneof index if part of a oneof\r\n * @property {*} [jsonName] Not supported\r\n * @property {IFieldOptions} [options] Field options\r\n */\r\n\r\n/**\r\n * Values of the FieldDescriptorProto.Label enum.\r\n * @typedef IFieldDescriptorProtoLabel\r\n * @type {number}\r\n * @property {number} LABEL_OPTIONAL=1\r\n * @property {number} LABEL_REQUIRED=2\r\n * @property {number} LABEL_REPEATED=3\r\n */\r\n\r\n/**\r\n * Values of the FieldDescriptorProto.Type enum.\r\n * @typedef IFieldDescriptorProtoType\r\n * @type {number}\r\n * @property {number} TYPE_DOUBLE=1\r\n * @property {number} TYPE_FLOAT=2\r\n * @property {number} TYPE_INT64=3\r\n * @property {number} TYPE_UINT64=4\r\n * @property {number} TYPE_INT32=5\r\n * @property {number} TYPE_FIXED64=6\r\n * @property {number} TYPE_FIXED32=7\r\n * @property {number} TYPE_BOOL=8\r\n * @property {number} TYPE_STRING=9\r\n * @property {number} TYPE_GROUP=10\r\n * @property {number} TYPE_MESSAGE=11\r\n * @property {number} TYPE_BYTES=12\r\n * @property {number} TYPE_UINT32=13\r\n * @property {number} TYPE_ENUM=14\r\n * @property {number} TYPE_SFIXED32=15\r\n * @property {number} TYPE_SFIXED64=16\r\n * @property {number} TYPE_SINT32=17\r\n * @property {number} TYPE_SINT64=18\r\n */\r\n\r\n/**\r\n * Properties of a FieldOptions message.\r\n * @interface IFieldOptions\r\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\r\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\r\n */\r\n\r\n/**\r\n * Values of the FieldOptions.JSType enum.\r\n * @typedef IFieldOptionsJSType\r\n * @type {number}\r\n * @property {number} JS_NORMAL=0\r\n * @property {number} JS_STRING=1\r\n * @property {number} JS_NUMBER=2\r\n */\r\n\r\n// copied here from parse.js\r\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\r\n\r\n/**\r\n * Creates a field from a descriptor.\r\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n * @returns {Field} Field instance\r\n */\r\nField.fromDescriptor = function fromDescriptor(descriptor, syntax) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.DescriptorProto.decode(descriptor);\r\n\r\n    if (typeof descriptor.number !== \"number\")\r\n        throw Error(\"missing field id\");\r\n\r\n    // Rewire field type\r\n    var fieldType;\r\n    if (descriptor.typeName && descriptor.typeName.length)\r\n        fieldType = descriptor.typeName;\r\n    else\r\n        fieldType = fromDescriptorType(descriptor.type);\r\n\r\n    // Rewire field rule\r\n    var fieldRule;\r\n    switch (descriptor.label) {\r\n        // 0 is reserved for errors\r\n        case 1: fieldRule = undefined; break;\r\n        case 2: fieldRule = \"required\"; break;\r\n        case 3: fieldRule = \"repeated\"; break;\r\n        default: throw Error(\"illegal label: \" + descriptor.label);\r\n    }\r\n\r\n\tvar extendee = descriptor.extendee;\r\n\tif (descriptor.extendee !== undefined) {\r\n\t\textendee = extendee.length ? extendee : undefined;\r\n\t}\r\n    var field = new Field(\r\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\r\n        descriptor.number,\r\n        fieldType,\r\n        fieldRule,\r\n        extendee\r\n    );\r\n\r\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\r\n\r\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\r\n        var defaultValue = descriptor.defaultValue;\r\n        switch (defaultValue) {\r\n            case \"true\": case \"TRUE\":\r\n                defaultValue = true;\r\n                break;\r\n            case \"false\": case \"FALSE\":\r\n                defaultValue = false;\r\n                break;\r\n            default:\r\n                var match = numberRe.exec(defaultValue);\r\n                if (match)\r\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\r\n                break;\r\n        }\r\n        field.setOption(\"default\", defaultValue);\r\n    }\r\n\r\n    if (packableDescriptorType(descriptor.type)) {\r\n        if (syntax === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\r\n            if (descriptor.options && !descriptor.options.packed)\r\n                field.setOption(\"packed\", false);\r\n        } else if (!(descriptor.options && descriptor.options.packed)) // defaults to packed=false\r\n            field.setOption(\"packed\", false);\r\n    }\r\n\r\n    return field;\r\n};\r\n\r\n/**\r\n * Converts a field to a descriptor.\r\n * @returns {Message<IFieldDescriptorProto>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nField.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\r\n\r\n    if (this.map) {\r\n\r\n        descriptor.type = 11; // message\r\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\r\n        descriptor.label = 3; // repeated\r\n\r\n    } else {\r\n\r\n        // Rewire field type\r\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType)) {\r\n            case 10: // group\r\n            case 11: // type\r\n            case 14: // enum\r\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\r\n                break;\r\n        }\r\n\r\n        // Rewire field rule\r\n        switch (this.rule) {\r\n            case \"repeated\": descriptor.label = 3; break;\r\n            case \"required\": descriptor.label = 2; break;\r\n            default: descriptor.label = 1; break;\r\n        }\r\n\r\n    }\r\n\r\n    // Handle extension field\r\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\r\n\r\n    // Handle part of oneof\r\n    if (this.partOf)\r\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\r\n            throw Error(\"missing oneof\");\r\n\r\n    if (this.options) {\r\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\r\n        if (this.options[\"default\"] != null)\r\n            descriptor.defaultValue = String(this.options[\"default\"]);\r\n    }\r\n\r\n    if (syntax === \"proto3\") { // defaults to packed=true\r\n        if (!this.packed)\r\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\r\n    } else if (this.packed) // defaults to packed=false\r\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\r\n\r\n    return descriptor;\r\n};\r\n\r\n// --- Enum ---\r\n\r\n/**\r\n * Properties of an EnumDescriptorProto message.\r\n * @interface IEnumDescriptorProto\r\n * @property {string} [name] Enum name\r\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\r\n * @property {IEnumOptions} [options] Enum options\r\n */\r\n\r\n/**\r\n * Properties of an EnumValueDescriptorProto message.\r\n * @interface IEnumValueDescriptorProto\r\n * @property {string} [name] Name\r\n * @property {number} [number] Value\r\n * @property {*} [options] Not supported\r\n */\r\n\r\n/**\r\n * Properties of an EnumOptions message.\r\n * @interface IEnumOptions\r\n * @property {boolean} [allowAlias] Whether aliases are allowed\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedEnumIndex = 0;\r\n\r\n/**\r\n * Creates an enum from a descriptor.\r\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Enum} Enum instance\r\n */\r\nEnum.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\r\n\r\n    // Construct values object\r\n    var values = {};\r\n    if (descriptor.value)\r\n        for (var i = 0; i < descriptor.value.length; ++i) {\r\n            var name  = descriptor.value[i].name,\r\n                value = descriptor.value[i].number || 0;\r\n            values[name && name.length ? name : \"NAME\" + value] = value;\r\n        }\r\n\r\n    return new Enum(\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\r\n        values,\r\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\r\n    );\r\n};\r\n\r\n/**\r\n * Converts an enum to a descriptor.\r\n * @returns {Message<IEnumDescriptorProto>} Descriptor\r\n */\r\nEnum.prototype.toDescriptor = function toDescriptor() {\r\n\r\n    // Values\r\n    var values = [];\r\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\r\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\r\n\r\n    return exports.EnumDescriptorProto.create({\r\n        name: this.name,\r\n        value: values,\r\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\r\n    });\r\n};\r\n\r\n// --- OneOf ---\r\n\r\n/**\r\n * Properties of a OneofDescriptorProto message.\r\n * @interface IOneofDescriptorProto\r\n * @property {string} [name] Oneof name\r\n * @property {*} [options] Not supported\r\n */\r\n\r\nvar unnamedOneofIndex = 0;\r\n\r\n/**\r\n * Creates a oneof from a descriptor.\r\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {OneOf} OneOf instance\r\n */\r\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\r\n\r\n    return new OneOf(\r\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\r\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\r\n    );\r\n};\r\n\r\n/**\r\n * Converts a oneof to a descriptor.\r\n * @returns {Message<IOneofDescriptorProto>} Descriptor\r\n */\r\nOneOf.prototype.toDescriptor = function toDescriptor() {\r\n    return exports.OneofDescriptorProto.create({\r\n        name: this.name\r\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\r\n    });\r\n};\r\n\r\n// --- Service ---\r\n\r\n/**\r\n * Properties of a ServiceDescriptorProto message.\r\n * @interface IServiceDescriptorProto\r\n * @property {string} [name] Service name\r\n * @property {IMethodDescriptorProto[]} [method] Methods\r\n * @property {IServiceOptions} [options] Options\r\n */\r\n\r\n/**\r\n * Properties of a ServiceOptions message.\r\n * @interface IServiceOptions\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedServiceIndex = 0;\r\n\r\n/**\r\n * Creates a service from a descriptor.\r\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Service} Service instance\r\n */\r\nService.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\r\n\r\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\r\n    if (descriptor.method)\r\n        for (var i = 0; i < descriptor.method.length; ++i)\r\n            service.add(Method.fromDescriptor(descriptor.method[i]));\r\n\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts a service to a descriptor.\r\n * @returns {Message<IServiceDescriptorProto>} Descriptor\r\n */\r\nService.prototype.toDescriptor = function toDescriptor() {\r\n\r\n    // Methods\r\n    var methods = [];\r\n    for (var i = 0; i < this.methodsArray.length; ++i)\r\n        methods.push(this._methodsArray[i].toDescriptor());\r\n\r\n    return exports.ServiceDescriptorProto.create({\r\n        name: this.name,\r\n        method: methods,\r\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\r\n    });\r\n};\r\n\r\n// --- Method ---\r\n\r\n/**\r\n * Properties of a MethodDescriptorProto message.\r\n * @interface IMethodDescriptorProto\r\n * @property {string} [name] Method name\r\n * @property {string} [inputType] Request type name\r\n * @property {string} [outputType] Response type name\r\n * @property {IMethodOptions} [options] Not supported\r\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\r\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\r\n */\r\n\r\n/**\r\n * Properties of a MethodOptions message.\r\n * @interface IMethodOptions\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedMethodIndex = 0;\r\n\r\n/**\r\n * Creates a method from a descriptor.\r\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Method} Reflected method instance\r\n */\r\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\r\n\r\n    return new Method(\r\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\r\n        \"rpc\",\r\n        descriptor.inputType,\r\n        descriptor.outputType,\r\n        Boolean(descriptor.clientStreaming),\r\n        Boolean(descriptor.serverStreaming),\r\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\r\n    );\r\n};\r\n\r\n/**\r\n * Converts a method to a descriptor.\r\n * @returns {Message<IMethodDescriptorProto>} Descriptor\r\n */\r\nMethod.prototype.toDescriptor = function toDescriptor() {\r\n    return exports.MethodDescriptorProto.create({\r\n        name: this.name,\r\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\r\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\r\n        clientStreaming: this.requestStream,\r\n        serverStreaming: this.responseStream,\r\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\r\n    });\r\n};\r\n\r\n// --- utility ---\r\n\r\n// Converts a descriptor type to a protobuf.js basic type\r\nfunction fromDescriptorType(type) {\r\n    switch (type) {\r\n        // 0 is reserved for errors\r\n        case 1: return \"double\";\r\n        case 2: return \"float\";\r\n        case 3: return \"int64\";\r\n        case 4: return \"uint64\";\r\n        case 5: return \"int32\";\r\n        case 6: return \"fixed64\";\r\n        case 7: return \"fixed32\";\r\n        case 8: return \"bool\";\r\n        case 9: return \"string\";\r\n        case 12: return \"bytes\";\r\n        case 13: return \"uint32\";\r\n        case 15: return \"sfixed32\";\r\n        case 16: return \"sfixed64\";\r\n        case 17: return \"sint32\";\r\n        case 18: return \"sint64\";\r\n    }\r\n    throw Error(\"illegal type: \" + type);\r\n}\r\n\r\n// Tests if a descriptor type is packable\r\nfunction packableDescriptorType(type) {\r\n    switch (type) {\r\n        case 1: // double\r\n        case 2: // float\r\n        case 3: // int64\r\n        case 4: // uint64\r\n        case 5: // int32\r\n        case 6: // fixed64\r\n        case 7: // fixed32\r\n        case 8: // bool\r\n        case 13: // uint32\r\n        case 14: // enum (!)\r\n        case 15: // sfixed32\r\n        case 16: // sfixed64\r\n        case 17: // sint32\r\n        case 18: // sint64\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n// Converts a protobuf.js basic type to a descriptor type\r\nfunction toDescriptorType(type, resolvedType) {\r\n    switch (type) {\r\n        // 0 is reserved for errors\r\n        case \"double\": return 1;\r\n        case \"float\": return 2;\r\n        case \"int64\": return 3;\r\n        case \"uint64\": return 4;\r\n        case \"int32\": return 5;\r\n        case \"fixed64\": return 6;\r\n        case \"fixed32\": return 7;\r\n        case \"bool\": return 8;\r\n        case \"string\": return 9;\r\n        case \"bytes\": return 12;\r\n        case \"uint32\": return 13;\r\n        case \"sfixed32\": return 15;\r\n        case \"sfixed64\": return 16;\r\n        case \"sint32\": return 17;\r\n        case \"sint64\": return 18;\r\n    }\r\n    if (resolvedType instanceof Enum)\r\n        return 14;\r\n    if (resolvedType instanceof Type)\r\n        return resolvedType.group ? 10 : 11;\r\n    throw Error(\"illegal type: \" + type);\r\n}\r\n\r\n// Converts descriptor options to an options object\r\nfunction fromDescriptorOptions(options, type) {\r\n    if (!options)\r\n        return undefined;\r\n    var out = [];\r\n    for (var i = 0, field, key, val; i < type.fieldsArray.length; ++i)\r\n        if ((key = (field = type._fieldsArray[i]).name) !== \"uninterpretedOption\")\r\n            if (options.hasOwnProperty(key)) { // eslint-disable-line no-prototype-builtins\r\n                val = options[key];\r\n                if (field.resolvedType instanceof Enum && typeof val === \"number\" && field.resolvedType.valuesById[val] !== undefined)\r\n                    val = field.resolvedType.valuesById[val];\r\n                out.push(underScore(key), val);\r\n            }\r\n    return out.length ? $protobuf.util.toObject(out) : undefined;\r\n}\r\n\r\n// Converts an options object to descriptor options\r\nfunction toDescriptorOptions(options, type) {\r\n    if (!options)\r\n        return undefined;\r\n    var out = [];\r\n    for (var i = 0, ks = Object.keys(options), key, val; i < ks.length; ++i) {\r\n        val = options[key = ks[i]];\r\n        if (key === \"default\")\r\n            continue;\r\n        var field = type.fields[key];\r\n        if (!field && !(field = type.fields[key = $protobuf.util.camelCase(key)]))\r\n            continue;\r\n        out.push(key, val);\r\n    }\r\n    return out.length ? type.fromObject($protobuf.util.toObject(out)) : undefined;\r\n}\r\n\r\n// Calculates the shortest relative path from `from` to `to`.\r\nfunction shortname(from, to) {\r\n    var fromPath = from.fullName.split(\".\"),\r\n        toPath = to.fullName.split(\".\"),\r\n        i = 0,\r\n        j = 0,\r\n        k = toPath.length - 1;\r\n    if (!(from instanceof Root) && to instanceof Namespace)\r\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\r\n            var other = to.lookup(fromPath[i++], true);\r\n            if (other !== null && other !== to)\r\n                break;\r\n            ++j;\r\n        }\r\n    else\r\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\r\n    return toPath.slice(j).join(\".\");\r\n}\r\n\r\n// copied here from cli/targets/proto.js\r\nfunction underScore(str) {\r\n    return str.substring(0,1)\r\n         + str.substring(1)\r\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\r\n}\r\n\r\n// --- exports ---\r\n\r\n/**\r\n * Reflected file descriptor set.\r\n * @name FileDescriptorSet\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected file descriptor proto.\r\n * @name FileDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected descriptor proto.\r\n * @name DescriptorProto\r\n * @type {Type}\r\n * @property {Type} ExtensionRange\r\n * @property {Type} ReservedRange\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     ExtensionRange: $protobuf.Type,\r\n *     ReservedRange: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected field descriptor proto.\r\n * @name FieldDescriptorProto\r\n * @type {Type}\r\n * @property {Enum} Label\r\n * @property {Enum} Type\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Label: $protobuf.Enum,\r\n *     Type: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected oneof descriptor proto.\r\n * @name OneofDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum descriptor proto.\r\n * @name EnumDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected service descriptor proto.\r\n * @name ServiceDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum value descriptor proto.\r\n * @name EnumValueDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected method descriptor proto.\r\n * @name MethodDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected file options.\r\n * @name FileOptions\r\n * @type {Type}\r\n * @property {Enum} OptimizeMode\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     OptimizeMode: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected message options.\r\n * @name MessageOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected field options.\r\n * @name FieldOptions\r\n * @type {Type}\r\n * @property {Enum} CType\r\n * @property {Enum} JSType\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     CType: $protobuf.Enum,\r\n *     JSType: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected oneof options.\r\n * @name OneofOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum options.\r\n * @name EnumOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum value options.\r\n * @name EnumValueOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected service options.\r\n * @name ServiceOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected method options.\r\n * @name MethodOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected uninterpretet option.\r\n * @name UninterpretedOption\r\n * @type {Type}\r\n * @property {Type} NamePart\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     NamePart: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected source code info.\r\n * @name SourceCodeInfo\r\n * @type {Type}\r\n * @property {Type} Location\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Location: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected generated code info.\r\n * @name GeneratedCodeInfo\r\n * @type {Type}\r\n * @property {Type} Annotation\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Annotation: $protobuf.Type\r\n * }\r\n */\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6822, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}